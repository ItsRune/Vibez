"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[295],{956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Features/Notifications","title":"Notifications","description":"What are notifications?","source":"@site/docs/Features/Notifications.md","sourceDirName":"Features","slug":"/Features/Notifications","permalink":"/VibezAPI/docs/Features/Notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/ItsRune/VibezAPI/edit/master/docs/Features/Notifications.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"defaultSidebar","previous":{"title":"Blacklists","permalink":"/VibezAPI/docs/Features/Blacklists"},"next":{"title":"Global API","permalink":"/VibezAPI/docs/Features/Global"}}');var o=n(4848),s=n(8453);const a={sidebar_position:5},r=void 0,c={},l=[{value:"What are notifications?",id:"what-are-notifications",level:3},{value:"When are notifications used?",id:"when-are-notifications-used",level:3},{value:"Can I send custom notifications?",id:"can-i-send-custom-notifications",level:3},{value:"Notification Settings",id:"notification-settings",level:3}];function u(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h3,{id:"what-are-notifications",children:"What are notifications?"}),"\n",(0,o.jsx)(t.p,{children:"Notifications are a way to tell the user if their request went through successfully or not. Their main purpose is to inform the user of the status of their request."}),"\n",(0,o.jsx)(t.h3,{id:"when-are-notifications-used",children:"When are notifications used?"}),"\n",(0,o.jsxs)(t.p,{children:["Notifications are mainly used when using the: Beta UI, ",(0,o.jsx)(t.a,{href:"/VibezAPI/docs/Features/Commands/About/",children:"Commands"}),", or RankSticks. Notifications are intended to tell the user if their request went throught successfully or not."]}),"\n",(0,o.jsx)(t.h3,{id:"can-i-send-custom-notifications",children:"Can I send custom notifications?"}),"\n",(0,o.jsxs)(t.p,{children:["Yes, you can use our notification handler to send custom notifications. The method to do this is ",(0,o.jsx)(t.code,{children:"notifyPlayer"})," along with the message. ",(0,o.jsx)("br",{}),"\nExample:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-lua",children:'VibezAPI:notifyPlayer(Player, "Hello there!")\n'})}),"\n",(0,o.jsx)(t.h3,{id:"notification-settings",children:"Notification Settings"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-lua",children:"Enabled = true, -- Determines whether or not notifications are enabled.\n\nFont = Enum.Font.Gotham, -- The font for notifications.\nFontSize = 16, -- The default font size. (Fit for mobile users)\nkeyboardFontSizeMultiplier = 1.25, -- Multiplier for fontsize keyboard users\ndelayUntilRemoval = 20, -- The time it takes for a notification to be removed.\n\nentranceTweenInfo = { -- Tween info for when a notification enters the screen.\n    Style = Enum.EasingStyle.Quint, -- Tween easing style.\n    Direction = Enum.EasingDirection.InOut, -- Tween easing direction.\n    timeItTakes = 1, -- How long the tween takes to complete. (Seconds)\n},\n\nexitTweenInfo = { -- Tween info for when a notification exits the screen.\n    Style = Enum.EasingStyle.Quint, -- Tween easing style.\n    Direction = Enum.EasingDirection.InOut, -- Tween easing direction.\n    timeItTakes = 1, -- How long the tween takes to complete. (Seconds)\n},\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);