"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[348],{4683:e=>{e.exports=JSON.parse('{"functions":[{"name":"Http","desc":"Uses `RequestAsync` to fetch required assets to make this API wrapper work properly. Automatically handles the API key and necessary headers associated with different routes.","params":[{"name":"Route","desc":"","lua_type":"string"},{"name":"Method","desc":"","lua_type":"string?"},{"name":"Headers","desc":"","lua_type":"{ [string]: any }?"},{"name":"Body","desc":"","lua_type":"{ any }?"},{"name":"useOldApi","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"boolean, httpResponse?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":146,"path":"src/init.lua"}},{"name":"getGroupId","desc":"Fetches the group associated with the api key.","params":[],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":215,"path":"src/init.lua"}},{"name":"_getGroupRankFromName","desc":"Fetches the group\'s role name\'s rank value.\\n\\nAllows for partial naming, example:\\n```lua\\n-- Using Frivo\'s group ID\\nlocal rankNumber = VibezAPI:_getGroupRankFromName(\\"facili\\") --\x3e Expected: 250 (Facility Developer)\\n```","params":[{"name":"groupRoleName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":243,"path":"src/init.lua"}},{"name":"_getGroupFromUser","desc":"Uses roblox\'s group service to get a player\'s rank.","params":[{"name":"groupId","desc":"","lua_type":"number"},{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":275,"path":"src/init.lua"}},{"name":"_onPlayerAdded","desc":"Handles players joining the game and checks for if commands/ui are enabled.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":306,"path":"src/init.lua"}},{"name":"_onPlayerRemoved","desc":"Handles players leaving the game and disconnects any events.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":368,"path":"src/init.lua"}},{"name":"_isPlayerRankOkToProceed","desc":"Compares a rank to the min/max ranks in settings for the commands/ui.","params":[{"name":"playerRank","desc":"","lua_type":"number"},{"name":"minRank","desc":"","lua_type":"number"},{"name":"maxRank","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","private":true,"source":{"line":401,"path":"src/init.lua"}},{"name":"_getUserIdByName","desc":"Gets a player\'s user identifier via their username.","params":[{"name":"username","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":417,"path":"src/init.lua"}},{"name":"_getNameById","desc":"Gets a player\'s username by their userId","params":[{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":433,"path":"src/init.lua"}},{"name":"_createRemote","desc":"Creates / Fetches a remote function in replicated storage for client communication.","params":[],"returns":[{"desc":"","lua_type":"Remote RemoteFunction"}],"function_type":"method","since":"1.0.0","private":true,"source":{"line":447,"path":"src/init.lua"}},{"name":"_getRoleIdFromRank","desc":"Gets the role id of a rank.","params":[{"name":"rank","desc":"","lua_type":"number | string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":470,"path":"src/init.lua"}},{"name":"_getPlayers","desc":"Gets the closest match to a player\'s username who\'s in game.","params":[{"name":"usernames","desc":"","lua_type":"{string}"}],"returns":[{"desc":"","lua_type":"{Player?}"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":513,"path":"src/init.lua"}},{"name":"_onPlayerChatted","desc":"Handles the main chatting event for commands.","params":[{"name":"Player","desc":"","lua_type":"Player"},{"name":"message","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":559,"path":"src/init.lua"}},{"name":"_checkHttp","desc":"Checks for if HTTP is enabled","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":613,"path":"src/init.lua"}},{"name":"_setRank","desc":"Sets the rank of a player and uses \\"whoCalled\\" to send a message with origin logging name.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"rankId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":630,"path":"src/init.lua"}},{"name":"_Promote","desc":"Promotes a player and creates a fake \\"whoCalled\\" variable.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":677,"path":"src/init.lua"}},{"name":"_Demote","desc":"Demotes a player and uses \\"whoCalled\\", creates one if none is added.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":718,"path":"src/init.lua"}},{"name":"_Fire","desc":"Fires a player and creates a fake \\"whoCalled\\" variable if none is supplied.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":759,"path":"src/init.lua"}},{"name":"_destroy","desc":"Destroys the class.","params":[],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":796,"path":"src/init.lua"}},{"name":"_warn","desc":"Displays a warning with the prefix of \\"[Vibez]\\"","params":[{"name":"...","desc":"","lua_type":"...string"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":810,"path":"src/init.lua"}},{"name":"SetRank","desc":"Changes the rank of a player.\\n\\n```lua\\nlocal userId, rankId = 1, 200\\nVibez:SetRank(userId, rankId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"rankId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":835,"path":"src/init.lua"}},{"name":"Promote","desc":"Promotes a player.\\n\\n```lua\\nlocal userId = 1\\nlocal response = Vibez:Promote(userId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":854,"path":"src/init.lua"}},{"name":"Demote","desc":"Demotes a player.\\n\\n```lua\\nlocal userId = 1\\nlocal response = Vibez:Demote(userId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":873,"path":"src/init.lua"}},{"name":"Fire","desc":"Fires a player from the group.","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":887,"path":"src/init.lua"}},{"name":"ToggleCommands","desc":"Toggles the usage of commands within the experience.","params":[{"name":"override","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":900,"path":"src/init.lua"}},{"name":"addCommandOperation","desc":"Adds a command operation code.\\n\\n:::caution\\nThis method will not work if there\'s already an existing operation name!\\n:::\\n\\n```lua\\n-- This operation comes by default, no need to rewrite it.\\nVibez:addCommandOperation(\\n\\t\\"Team\\", -- Name of the operation.\\n\\t\\"%\\", -- Prefix before the operation argument.\\n\\tfunction(playerToCheck: Player, incomingArgument: string, internalFunctions)\\n\\t\\treturn playerToCheck.Team ~= nil\\n\\t\\t\\tand string.sub(string.lower(playerToCheck.Team.Name), 0, #incomingArgument)\\n\\t\\t\\t\\t== string.lower(incomingArgument)\\n\\tend\\n)\\n```\\n\\nThe `internalFunctions` parameter contains a table of functions that are meant to ease the developmental process of operations. Here\'s an example of one of them being used:\\n```lua\\nVibez:addCommandOperation(\\n\\t\\"SHR\\", -- Name of the operation.\\n\\t\\"shr\\", -- Prefix before the operation argument.\\n\\tfunction(playerToCheck: Player, incomingArgument: string, internalFunctions)\\n\\t\\tlocal playerGroupInfo = internalFunctions\\n\\t\\t\\t._getGroupFromUser(Vibez.GroupId, playerToCheck.UserId)\\n\\n\\t\\treturn playerGroupInfo.Rank >= 250\\n\\tend\\n)\\n```","params":[{"name":"operationName","desc":"","lua_type":"string"},{"name":"operationCode","desc":"","lua_type":"string"},{"name":"operationFunction","desc":"","lua_type":"(playerToCheck: Player, incomingArgument: string, internalFunctions: vibezCommandFunctions) -> boolean"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":960,"path":"src/init.lua"}},{"name":"removeCommandOperation","desc":"Removes a command operation code.\\n\\n```lua\\nVibez:removeCommandOperation(\\"Team\\")\\n```","params":[{"name":"operationName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":997,"path":"src/init.lua"}},{"name":"UpdateLoggerTitle","desc":"Updates the logger\'s origin name.","params":[{"name":"newTitle","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","since":"1.0.0","source":{"line":1009,"path":"src/init.lua"}},{"name":"UpdateKey","desc":"Updates the api key.","params":[{"name":"newApiKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1023,"path":"src/init.lua"}},{"name":"Destroy","desc":"Destroys the VibezAPI class.","params":[],"returns":[],"function_type":"method","since":"1.0.0","source":{"line":1054,"path":"src/init.lua"}},{"name":"ToggleUI","desc":"Toggles the client promote/demote/fire UI.","params":[{"name":"override","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","since":"1.0.0","source":{"line":1066,"path":"src/init.lua"}},{"name":"getWebhookBuilder","desc":"Initializes the Hooks class with the specified webhook.","params":[{"name":"webhook","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"VibezHooks"}],"function_type":"method","since":"1.0.0","source":{"line":1094,"path":"src/init.lua"}},{"name":"getActivity","desc":"Gets a player\'s or everyone\'s current activity","params":[{"name":"userId","desc":"","lua_type":"(string | number)?"}],"returns":[{"desc":"","lua_type":"activityResponse"}],"function_type":"method","since":"1.0.0","source":{"line":1108,"path":"src/init.lua"}},{"name":"saveActivity","desc":"Saves the player\'s current activity","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"secondsSpent","desc":"","lua_type":"number"},{"name":"messagesSent","desc":"","lua_type":"(number | { string })?"}],"returns":[{"desc":"","lua_type":"httpResponse"}],"function_type":"method","since":"1.0.0","source":{"line":1127,"path":"src/init.lua"}},{"name":"new","desc":"Constructs the main Vibez API class.\\n\\n```lua\\nlocal myKey = \\"YOUR_API_KEY_HERE\\"\\nlocal VibezAPI = require(script.VibezAPI)\\nlocal Vibez = VibezAPI(myKey)\\n```","params":[{"name":"apiKey","desc":"Your Vibez API key.","lua_type":"string"},{"name":"extraOptions","desc":"Extra settings to configure the api to work for you.","lua_type":"extraOptionsType"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"static","tags":["Constructor"],"source":{"line":1175,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"extraOptionsType","desc":"","fields":[{"name":"isChatCommandsEnabled","lua_type":"boolean","desc":"If enabled, it\'ll automatically load commands for users."},{"name":"isUIEnabled","lua_type":"boolean","desc":"If enabled, it\'ll allow for player\'s to click on another for ranking options."},{"name":"commandPrefix","lua_type":"string","desc":"Change the prefix of commands."},{"name":"minRankToUseCommands","lua_type":"number","desc":"Minimum rank to use commands."},{"name":"maxRankToUseCommands","lua_type":"number","desc":"Maximum rank to use commands."},{"name":"overrideGroupCheckForStudio","lua_type":"boolean","desc":"When in studio, it\'ll force any rank checks to be the \'maxRankForCommands\' value."},{"name":"loggingOriginName","lua_type":"string","desc":"Name of logger\'s \'Origin\' embed field."},{"name":"ignoreWarnings","lua_type":"boolean","desc":"Ignores any VibezAPI warnings (Excluding Webhooks & Activity Tracking)"}],"source":{"line":33,"path":"src/init.lua"}},{"name":"groupIdResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"groupId","lua_type":"number?","desc":""}],"private":true,"source":{"line":41,"path":"src/init.lua"}},{"name":"errorResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"errorMessage","lua_type":"string","desc":""}],"private":true,"source":{"line":49,"path":"src/init.lua"}},{"name":"rankResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"message","lua_type":"string","desc":""},{"name":"data","lua_type":"{ newRank: { id: number, name: string, rank: number, memberCount: number }, oldRank: { id: number, name: string, rank: number, groupInformation: { id: number, name: string, memberCount: number, hasVerifiedBadge: boolean } } }","desc":""}],"private":true,"source":{"line":58,"path":"src/init.lua"}},{"name":"vibezCommandFunctions","desc":"","fields":[{"name":"getGroupRankFromName","lua_type":"(self: VibezAPI, groupRoleName: string) -> number?","desc":""},{"name":"getGroupFromUser","lua_type":"(self: VibezAPI, groupId: number, userId: number) -> { any }?","desc":""},{"name":"Http","lua_type":"(self: VibezAPI, Route: string, Method: string?, Headers: { [string]: any }, Body: { any }) -> httpResponse","desc":""}],"private":true,"source":{"line":67,"path":"src/init.lua"}},{"name":"infoResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"message","lua_type":"string","desc":""}],"private":true,"source":{"line":75,"path":"src/init.lua"}},{"name":"activityResponse","desc":"","fields":[{"name":"secondsUserHasSpent","lua_type":"number","desc":""},{"name":"messagesUserHasSent","lua_type":"number","desc":""},{"name":"detailsLogs","lua_type":"[ {timestampLeftAt: number, secondsUserHasSpent: number, messagesUserHasSent: number}? ]","desc":""}],"private":true,"source":{"line":84,"path":"src/init.lua"}},{"name":"responseBody","desc":"","lua_type":"groupIdResponse | errorResponse | rankResponse","private":true,"source":{"line":90,"path":"src/init.lua"}},{"name":"httpResponse","desc":"","fields":[{"name":"Body","lua_type":"responseBody","desc":""},{"name":"Headers","lua_type":"{ [string]: any }","desc":""},{"name":"StatusCode","lua_type":"number","desc":""},{"name":"StatusMessage","lua_type":"string?","desc":""},{"name":"Success","lua_type":"boolean","desc":""},{"name":"rawBody","lua_type":"string","desc":""}],"private":true,"source":{"line":102,"path":"src/init.lua"}}],"name":"VibezAPI","desc":"**IMPORTANT**: When using this module, we recommend using the number-based format rather than importing the scripts into the game.\\n\\t","source":{"line":1185,"path":"src/init.lua"}}')}}]);