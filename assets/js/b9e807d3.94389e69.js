"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[362],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(a),y=i,m=d["".concat(s,".").concat(y)]||d[y]||p[y]||r;return a?n.createElement(m,o(o({ref:t},u),{},{components:a})):n.createElement(m,o({ref:t},u))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=y;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:i,o[1]=c;for(var l=2;l<r;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},23453:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var n=a(87462),i=(a(67294),a(3905));const r={sidebar_position:2},o=void 0,c={unversionedId:"Features/Activity Tracking",id:"Features/Activity Tracking",title:"Activity Tracking",description:"How does the activity tracking work?",source:"@site/docs/Features/Activity Tracking.md",sourceDirName:"Features",slug:"/Features/Activity Tracking",permalink:"/VibezAPI/docs/Features/Activity Tracking",draft:!1,editUrl:"https://github.com/ItsRune/VibezAPI/edit/master/docs/Features/Activity Tracking.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Ranking",permalink:"/VibezAPI/docs/Features/Ranking"},next:{title:"Webhooks",permalink:"/VibezAPI/docs/Features/Webhooks"}},s={},l=[{value:"How does the activity tracking work?",id:"how-does-the-activity-tracking-work",level:3},{value:"How do I use the activity tracker?",id:"how-do-i-use-the-activity-tracker",level:3},{value:"How do I get the activity of a staff member?",id:"how-do-i-get-the-activity-of-a-staff-member",level:3},{value:"How do I add seconds to a specific player?",id:"how-do-i-add-seconds-to-a-specific-player",level:3},{value:"How do I get everyone&#39;s activity?",id:"how-do-i-get-everyones-activity",level:3},{value:"Example Usage",id:"example-usage",level:3}],u={toc:l},d="wrapper";function p(e){let{components:t,...a}=e;return(0,i.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"how-does-the-activity-tracking-work"},"How does the activity tracking work?"),(0,i.kt)("p",null,"The activity tracker works by using object orientated programming that creates specific functions to call upon each staff member within the game. This allows for a more efficient way of tracking staff members and their activity. The activity tracker is also able to track the amount of time a staff member has been active for, and the amount of time they have been inactive for. This allows for a more accurate representation of how active a staff member is."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE:")," Inactivity is not sent to Vibez API, it is only used for the activity tracker."),(0,i.kt)("h3",{id:"how-do-i-use-the-activity-tracker"},"How do I use the activity tracker?"),(0,i.kt)("p",null,"The activity tracker is very simple to use. All you need to do is require the main module and change an option to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local Vibez = require(14946453963)("API Key", {\n    ActivityTracker = {\n        Enabled = true, -- Enabled the tracker for players.\n        MinRank = 255, -- The minimum rank that a staff member must be to be tracked.\n        disableWhenInStudio = true, -- Disables when studio play testing.\n        disableWhenAFK = true, -- Disables when player is detected as AFK.\n        disableWhenInPrivateServer = true, -- Disables when player is in a private server.\n        delayBeforeMarkedAFK = 15, -- The amount of seconds to wait before the player is marked AFK.\n\n        kickIfFails = true, -- Used to kick the player if the activity tracker fails to initialize, below is the message for this occurrence.\n        failMessage = "Uh oh! Looks like there was an issue initializing the activity tracker for you. Please try again later!",\n    }\n})\n')),(0,i.kt)("h3",{id:"how-do-i-get-the-activity-of-a-staff-member"},"How do I get the activity of a staff member?"),(0,i.kt)("p",null,"Getting the activity of a staff member is very simple. All you need to do is call the ",(0,i.kt)("inlineCode",{parentName:"p"},"getActivity")," function on the Vibez object."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local Vibez = require(14946453963)("API Key", {\n    ActivityTracker = {\n        Enabled = true,\n        MinRank = 255,\n    }\n})\n\nlocal activity = Vibez:getActivity(107392833) -- 107392833 is the user id of the staff member\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"TIP:")," If you'd like to get everyone's activity... Don't put a user id in the ",(0,i.kt)("inlineCode",{parentName:"p"},"getActivity")," function."),(0,i.kt)("h3",{id:"how-do-i-add-seconds-to-a-specific-player"},"How do I add seconds to a specific player?"),(0,i.kt)("p",null,"Vibez allows for customization when necessary, if you're writing your own activity tracker you can achieve this with the ",(0,i.kt)("inlineCode",{parentName:"p"},"saveActivity")," method that the wrapper provides."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local Vibez = require(14946453963)("API Key", {\n    ActivityTracker = {\n        Enabled = true,\n        MinRank = 255,\n    }\n})\n\nlocal function addSecondsToPlayer(UserId: number, userRank: number, secondsSpent: number, messagesSent: number)\n    Vibez:saveActivity(UserId, userRank, secondsSpent, messagesSent)\nend\n\nlocal function addSecondsToPlayerWithoutRank(UserId: number, secondsSpent: number, messagesSent: number)\n    Vibez:saveActivity(UserId, nil, secondsSpent, messagesSent, true)\nend\n\n-- Example usage\n-- adding 10 seconds and 5 messages\naddSecondsToPlayer(107392833, 250, 10, 5)\naddSecondsToPlayerWithoutRank(107392833, 10, 5)\n')),(0,i.kt)("h3",{id:"how-do-i-get-everyones-activity"},"How do I get everyone's activity?"),(0,i.kt)("p",null,"Getting everyone's activity is very simple. All you need to do is call the ",(0,i.kt)("inlineCode",{parentName:"p"},"getActivity")," function on the Vibez object without any arguments."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local allPlayerActivity = Vibez:getActivity()\n")),(0,i.kt)("h3",{id:"example-usage"},"Example Usage"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Creating a backup of all player activity"),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'"ServerScriptService/ActivityBackup.lua"','"ServerScriptService/ActivityBackup.lua"':!0},'--// Services \\\\--\nlocal DataStoreService = game:GetService("DataStoreService")\n\n--// Variables \\\\--\nlocal Vibez = require(14946453963)("API Key"):waitUntilLoaded()\nlocal backupDataStore = DataStoreService:GetDataStore("PlayerActivity")\n\n--// Functions \\\\--\nlocal function onGameShutdown()\n    local allActivity = Vibez:getActivity() -- Leaving this blank will invoke all player\'s activity.\n    pcall(backupDataStore.SetAsync, backupDataStore, "Backup", allActivity)\nend\n\n--// Connections \\\\--\ngame.OnClose:Connect(onGameShutdown)\n'))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Adding seconds to a player's activity"),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local Vibez = require(14946453963)("API Key"):waitUntilLoaded()\n\nlocal function addActivity(playerUserId: number, secondsSpent: number, messagesSent: number)\n    Vibez:saveActivity(playerUserId, secondsSpent, messagesSent)\nend\n\naddActivity(107392833, 10, 5) -- 107392833 is the user id of the staff member\n'))))}p.isMDXComponent=!0}}]);