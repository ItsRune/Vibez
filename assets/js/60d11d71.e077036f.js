"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3499],{94094:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates the rate limiting class.","params":[{"name":"requestsPerRetry","desc":"","lua_type":"number"},{"name":"retryAfter","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"RateLimiter"}],"function_type":"static","since":"1.0.0","ignore":true,"source":{"line":42,"path":"src/Modules/VibezRanking/src/RateLimit.luau"}},{"name":"Check","desc":"Checks to see if the developer is currently being rate limited.","params":[],"returns":[{"desc":"","lua_type":"(boolean, string?)"}],"function_type":"method","since":"1.0.0","source":{"line":63,"path":"src/Modules/VibezRanking/src/RateLimit.luau"}}],"properties":[],"types":[{"name":"RateLimit","desc":"","fields":[{"name":"isLimited","lua_type":"boolean","desc":""},{"name":"_retryAfter","lua_type":"number","desc":""},{"name":"_counter","lua_type":"number","desc":""},{"name":"_maxCounter","lua_type":"number","desc":""},{"name":"_counterStartedAt","lua_type":"number","desc":""}],"source":{"line":18,"path":"src/Modules/VibezRanking/src/RateLimit.luau"}}],"name":"RateLimiter","desc":"A class to handle rate limited requests and their errors.","source":{"line":8,"path":"src/Modules/VibezRanking/src/RateLimit.luau"}}')}}]);