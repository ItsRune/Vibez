"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[837],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>y});var o=r(67294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,o,t=function(e,n){if(null==e)return{};var r,o,t={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var s=o.createContext({}),c=function(e){var n=o.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},d=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var r=e.components,t=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(r),m=t,y=p["".concat(s,".").concat(m)]||p[m]||g[m]||a;return r?o.createElement(y,l(l({ref:n},d),{},{components:r})):o.createElement(y,l({ref:n},d))}));function y(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:t,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},76221:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=r(87462),t=(r(67294),r(3905));const a={"sidebar-position":9},l=void 0,i={unversionedId:"Examples/Webhooks",id:"Examples/Webhooks",title:"Webhooks",description:"Join Logger",source:"@site/docs/Examples/Webhooks.md",sourceDirName:"Examples",slug:"/Examples/Webhooks",permalink:"/VibezAPI/docs/Examples/Webhooks",draft:!1,editUrl:"https://github.com/ItsRune/VibezAPI/edit/master/docs/Examples/Webhooks.md",tags:[],version:"current",frontMatter:{"sidebar-position":9},sidebar:"defaultSidebar",previous:{title:"Ranking",permalink:"/VibezAPI/docs/Examples/Ranking"}},s={},c=[{value:"Join Logger",id:"join-logger",level:3},{value:"Leave Logger",id:"leave-logger",level:3},{value:"Chat Logger",id:"chat-logger",level:3}],d={toc:c},p="wrapper";function g(e){let{components:n,...r}=e;return(0,t.kt)(p,(0,o.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h3",{id:"join-logger"},"Join Logger"),(0,t.kt)("p",null,"Logs to discord everytime a player joins the game."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players")\n\nlocal Vibez = require(14946453963)("API Key", {\n    loggingOriginName = "Join Logger"\n})\n\nlocal function onPlayerAdded(Player: Player)\n    local webhook = Vibez:getWebhookBuilder("https://discord.com/api/webhooks/")\n\n    webhook:addEmbedWithBuilder(function(embed)\n        return embed\n            :setTitle(Player.Name)\n            :setDescription(`[{Player.Name}](https://www.roblox.com/users/{Player.UserId}/profile) has joined the game!`)\n            :setColor("0x00ff00") -- Green\n            :setTimestamp()\n    end)\n\n    webhook:Send()\nend\n\nPlayers.PlayerAdded:Connect(onPlayerAdded)\n')),(0,t.kt)("h3",{id:"leave-logger"},"Leave Logger"),(0,t.kt)("p",null,"Logs to discord everytime a player leaves the game."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players")\n\nlocal Vibez = require(14946453963)("API Key", {\n    loggingOriginName = "Join Logger"\n})\n\nlocal function onPlayerLeft(Player: Player)\n    local webhook = Vibez:getWebhookBuilder("https://discord.com/api/webhooks/")\n\n    webhook:addEmbedWithBuilder(function(embed)\n        return embed\n            :setTitle(Player.Name)\n            :setDescription(`[{Player.Name}](https://www.roblox.com/users/{Player.UserId}/profile) has left the game!`)\n            :setColor("0xff0000") -- Red\n            :setTimestamp()\n    end)\n\n    webhook:Send()\nend\n\nPlayers.PlayerRemoving:Connect(onPlayerLeft)\n')),(0,t.kt)("h3",{id:"chat-logger"},"Chat Logger"),(0,t.kt)("p",null,"Logs to discord everytime a player chats in game."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players")\n\nlocal Connections = {}\nlocal Vibez = require(14946453963)("API Key", {\n    loggingOriginName = "Chat Logger"\n})\n\nlocal function onPlayerChatted(Player: Player, Message: string)\n    local webhook = Vibez:getWebhookBuilder("https://discord.com/api/webhooks/")\n    webhook:SetContent(string.format("[%s]: %s", Player.Name, Message)):Send()\nend\n\nlocal function onPlayerAdded(Player: Player)\n    local theirConnections = {}\n\n    table.insert(theirConnections, Player.Chatted:Connect(function(Message)\n        onPlayerChatted(Player, Message) -- Bind the logger to the player\'s messages\n    end))\n\n    Connections[Player.UserId] = theirConnections\nend\n\n-- Disconnect the logger from the player\'s messages (cleans up memory)\nlocal function onPlayerRemoved(Player: Player)\n    local playerConnections = Connections[Player.UserId]\n\n    for _, connection in ipairs(playerConnections) do\n        connection:Disconnect()\n    end\n\n    Connections[Player.UserId] = nil\nend\n\nPlayers.PlayerAdded:Connect(onPlayerAdded)\nPlayers.PlayerRemoving:Connect(onPlayerRemoved)\n')))}g.isMDXComponent=!0}}]);