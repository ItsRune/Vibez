"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[619],{1276:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"Features/Activity Tracking","title":"Activity Tracking","description":"How does the activity tracking work?","source":"@site/docs/Features/Activity Tracking.md","sourceDirName":"Features","slug":"/Features/Activity Tracking","permalink":"/VibezAPI/docs/Features/Activity Tracking","draft":false,"unlisted":false,"editUrl":"https://github.com/ItsRune/VibezAPI/edit/master/docs/Features/Activity Tracking.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Ranking","permalink":"/VibezAPI/docs/Features/Ranking"},"next":{"title":"Webhooks","permalink":"/VibezAPI/docs/Features/Webhooks"}}');var n=i(4848),r=i(8453);const s={sidebar_position:2},c=void 0,o={},l=[{value:"How does the activity tracking work?",id:"how-does-the-activity-tracking-work",level:2},{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"getActivity",id:"getactivity",level:3},{value:"saveActivity",id:"saveactivity",level:3},{value:"Examples",id:"examples",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components},{Details:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"how-does-the-activity-tracking-work",children:"How does the activity tracking work?"}),"\n",(0,n.jsx)(t.p,{children:"The activity tracker works by using object orientated programming that creates specific functions to call upon each staff member within the game. This allows for a more efficient way of tracking staff members and their activity. The activity tracker is also able to track the amount of time a staff member has been active for, and the amount of time they have been inactive for. This allows for a more accurate representation of how active a staff member is."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"NOTE:"})," Inactivity is not sent to Vibez API, it is only used for the activity tracker."]}),"\n",(0,n.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,n.jsxs)(t.p,{children:["All you need to do is require the main module and change an option to ",(0,n.jsx)(t.code,{children:"true"}),". Then you're all set up to use the activity tracker within your game."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",children:'local Vibez = require(14946453963)("API Key", {\n    ActivityTracker = {\n        Enabled = true, -- Enabled the tracker for players.\n        MinRank = 255, -- The minimum rank that a staff member must be to be tracked.\n        disableWhenInStudio = true, -- Disables when studio play testing.\n        disableWhenAFK = true, -- Disables when player is detected as AFK.\n        disableWhenInPrivateServer = true, -- Disables when player is in a private server.\n        delayBeforeMarkedAFK = 15, -- The amount of seconds to wait before the player is marked AFK.\n\n        kickIfFails = true, -- Used to kick the player if the activity tracker fails to initialize, below is the message for this occurrence.\n        failMessage = "Uh oh! Looks like there was an issue initializing the activity tracker for you. Please try again later!",\n    }\n})\n'})}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.h3,{id:"getactivity",children:(0,n.jsx)(t.a,{href:"/VibezAPI/api/VibezAPI#getActivity",children:"getActivity"})}),"\n",(0,n.jsx)(t.p,{children:"Gets a player's current activity. (Leave blank for everyone's activity)"}),"\n",(0,n.jsxs)(t.p,{children:["Parameter(s): ",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.code,{children:"userId: (string | number | Player)?"})," - The user id of the player you want to get the activity of. ",(0,n.jsx)(t.strong,{children:"OPTIONAL"}),(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.p,{children:["Returns: ",(0,n.jsx)(t.a,{href:"/VibezAPI/api/VibezAPI#activityResponse",children:"activityResponse"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",children:"local allPlayerActivity = VibezApi:getActivity()\nlocal myActivity = VibezApi:getActivity(107392833)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"saveactivity",children:(0,n.jsx)(t.a,{href:"/VibezAPI/api/VibezAPI#saveActivity",children:"saveActivity"})}),"\n",(0,n.jsx)(t.p,{children:"Saves a player's activity."}),"\n",(0,n.jsxs)(t.p,{children:["Parameter(s): ",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.code,{children:"userId: (string | number | Player)"})," - The user id of the player you want to save the activity of. ",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.code,{children:"userRank: number"})," - The rank of the player.",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.code,{children:"secondsSpent: number"})," - The amount of seconds the player has spent. ",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.code,{children:"messagesSent: number"})," - The amount of messages the player has sent. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.p,{children:["Returns: ",(0,n.jsx)(t.a,{href:"/VibezAPI/api/VibezAPI#httpResponse",children:"httpResponse"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",children:"VibezApi:saveActivity(107392833, 200, 10, 5)\n"})}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)("summary",{children:"Creating a backup of all player activity"}),(0,n.jsx)("br",{}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",metastring:'"ServerScriptService/ActivityBackup.lua"',children:'--// Services \\\\--\nlocal DataStoreService = game:GetService("DataStoreService")\n\n--// Variables \\\\--\nlocal Vibez = require(14946453963)("API Key"):waitUntilLoaded()\nlocal backupDataStore = DataStoreService:GetDataStore("PlayerActivity")\n\n--// Functions \\\\--\nlocal function onGameShutdown()\n    local allActivity = Vibez:getActivity() -- Leaving this blank will invoke all player\'s activity.\n    pcall(backupDataStore.SetAsync, backupDataStore, "Backup", allActivity)\nend\n\n--// Connections \\\\--\ngame.OnClose:Connect(onGameShutdown)\n'})})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)("summary",{children:"Adding seconds to a player's activity"}),(0,n.jsx)("br",{}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",children:'local Vibez = require(14946453963)("API Key"):waitUntilLoaded()\n\nlocal function addActivity(playerUserId: number, secondsSpent: number, messagesSent: number)\n    Vibez:saveActivity(playerUserId, secondsSpent, messagesSent)\nend\n\naddActivity(107392833, 10, 5) -- 107392833 is the user id of the staff member\n'})})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>c});var a=i(6540);const n={},r=a.createContext(n);function s(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);