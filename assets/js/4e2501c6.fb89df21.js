"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[837],{3905:(e,n,o)=>{o.d(n,{Zo:()=>d,kt:()=>g});var r=o(67294);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,r,t=function(e,n){if(null==e)return{};var o,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var s=r.createContext({}),c=function(e){var n=r.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):l(l({},n),e)),o},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var o=e.components,t=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(o),u=t,g=p["".concat(s,".").concat(u)]||p[u]||m[u]||a;return o?r.createElement(g,l(l({ref:n},d),{},{components:o})):r.createElement(g,l({ref:n},d))}));function g(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=o.length,l=new Array(a);l[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:t,l[1]=i;for(var c=2;c<a;c++)l[c]=o[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}u.displayName="MDXCreateElement"},76221:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=o(87462),t=(o(67294),o(3905));const a={"sidebar-position":9},l=void 0,i={unversionedId:"Examples/Webhooks",id:"Examples/Webhooks",title:"Webhooks",description:"Colors",source:"@site/docs/Examples/Webhooks.md",sourceDirName:"Examples",slug:"/Examples/Webhooks",permalink:"/VibezAPI/docs/Examples/Webhooks",draft:!1,editUrl:"https://github.com/ItsRune/VibezAPI/edit/master/docs/Examples/Webhooks.md",tags:[],version:"current",frontMatter:{"sidebar-position":9},sidebar:"defaultSidebar",previous:{title:"Ranking",permalink:"/VibezAPI/docs/Examples/Ranking"}},s={},c=[{value:"Colors",id:"colors",level:3},{value:"Join Logger",id:"join-logger",level:3},{value:"Leave Logger",id:"leave-logger",level:3},{value:"Chat Logger",id:"chat-logger",level:3}],d={toc:c},p="wrapper";function m(e){let{components:n,...o}=e;return(0,t.kt)(p,(0,r.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h3",{id:"colors"},"Colors"),(0,t.kt)("p",null,"Typically you would use a hexidecimal color code for the color parameter, but you can also use a ",(0,t.kt)("inlineCode",{parentName:"p"},"Color3")," value. ",(0,t.kt)("strong",{parentName:"p"},"Only works for ",(0,t.kt)("inlineCode",{parentName:"strong"},"addEmbedWithBuilder"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-lua"},'local Vibez = require(14946453963)("API Key", {\n    nameOfGameForLogging = "Colors Example"\n})\n\nlocal webhook = Vibez:getWebhookBuilder("https://discord.com/api/webhooks/")\nwebhook:addEmbedWithBuilder(function(embed)\n    return embed\n        :setColor(Color3.fromRGB(255, 125, 255)) -- Light pink\n        :setTitle("Color3 Example")\n        :setDescription("This is an example of using a Color3 value for the color parameter.")\nend):Send()\n')),(0,t.kt)("h3",{id:"join-logger"},"Join Logger"),(0,t.kt)("p",null,"Logs to discord everytime a player joins the game."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players")\n\nlocal Vibez = require(14946453963)("API Key", {\n    nameOfGameForLogging = "Join Logger"\n})\n\nlocal function onPlayerAdded(Player: Player)\n    local webhook = Vibez:getWebhookBuilder("https://discord.com/api/webhooks/")\n\n    webhook:addEmbedWithBuilder(function(embed)\n        return embed\n            :setTitle(Player.Name)\n            :setDescription(`[{Player.Name}](https://www.roblox.com/users/{Player.UserId}/profile) has joined the game!`)\n            :setColor("0x00ff00") -- Green\n            :setTimestamp()\n    end)\n\n    webhook:Send()\nend\n\nPlayers.PlayerAdded:Connect(onPlayerAdded)\n')),(0,t.kt)("h3",{id:"leave-logger"},"Leave Logger"),(0,t.kt)("p",null,"Logs to discord everytime a player leaves the game."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players")\n\nlocal Vibez = require(14946453963)("API Key", {\n    nameOfGameForLogging = "Join Logger"\n})\n\nlocal function onPlayerLeft(Player: Player)\n    local webhook = Vibez:getWebhookBuilder("https://discord.com/api/webhooks/")\n\n    webhook:addEmbedWithBuilder(function(embed)\n        return embed\n            :setTitle(Player.Name)\n            :setDescription(`[{Player.Name}](https://www.roblox.com/users/{Player.UserId}/profile) has left the game!`)\n            :setColor("0xff0000") -- Red\n            :setTimestamp()\n    end)\n\n    webhook:Send()\nend\n\nPlayers.PlayerRemoving:Connect(onPlayerLeft)\n')),(0,t.kt)("h3",{id:"chat-logger"},"Chat Logger"),(0,t.kt)("p",null,"Logs to discord everytime a player chats in game."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players")\n\nlocal Connections = {}\nlocal Vibez = require(14946453963)("API Key", {\n    nameOfGameForLogging = "Chat Logger"\n})\n\nlocal function onPlayerChatted(Player: Player, Message: string)\n    local webhook = Vibez:getWebhookBuilder("https://discord.com/api/webhooks/")\n    webhook:SetContent(string.format("[%s]: %s", Player.Name, Message)):Send()\nend\n\nlocal function onPlayerAdded(Player: Player)\n    local theirConnections = {}\n\n    table.insert(theirConnections, Player.Chatted:Connect(function(Message)\n        onPlayerChatted(Player, Message) -- Bind the logger to the player\'s messages\n    end))\n\n    Connections[Player.UserId] = theirConnections\nend\n\n-- Disconnect the logger from the player\'s messages (cleans up memory)\nlocal function onPlayerRemoved(Player: Player)\n    local playerConnections = Connections[Player.UserId]\n\n    for _, connection in ipairs(playerConnections) do\n        connection:Disconnect()\n    end\n\n    Connections[Player.UserId] = nil\nend\n\nPlayers.PlayerAdded:Connect(onPlayerAdded)\nPlayers.PlayerRemoving:Connect(onPlayerRemoved)\n')))}m.isMDXComponent=!0}}]);