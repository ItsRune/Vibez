"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[362],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>v});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(a),d=r,v=p["".concat(s,".").concat(d)]||p[d]||y[d]||i;return a?n.createElement(v,l(l({ref:t},u),{},{components:a})):n.createElement(v,l({ref:t},u))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},23453:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_position:2},l=void 0,o={unversionedId:"Features/Activity Tracking",id:"Features/Activity Tracking",title:"Activity Tracking",description:"How does the activity tracking work?",source:"@site/docs/Features/Activity Tracking.md",sourceDirName:"Features",slug:"/Features/Activity Tracking",permalink:"/VibezAPI/docs/Features/Activity Tracking",draft:!1,editUrl:"https://github.com/ItsRune/VibezAPI/edit/master/docs/Features/Activity Tracking.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Ranking",permalink:"/VibezAPI/docs/Features/Ranking"},next:{title:"Webhooks",permalink:"/VibezAPI/docs/Features/Webhooks"}},s={},c=[{value:"How does the activity tracking work?",id:"how-does-the-activity-tracking-work",level:2},{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"getActivity",id:"getactivity",level:3},{value:"saveActivity",id:"saveactivity",level:3},{value:"Examples",id:"examples",level:2}],u={toc:c},p="wrapper";function y(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"how-does-the-activity-tracking-work"},"How does the activity tracking work?"),(0,r.kt)("p",null,"The activity tracker works by using object orientated programming that creates specific functions to call upon each staff member within the game. This allows for a more efficient way of tracking staff members and their activity. The activity tracker is also able to track the amount of time a staff member has been active for, and the amount of time they have been inactive for. This allows for a more accurate representation of how active a staff member is."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," Inactivity is not sent to Vibez API, it is only used for the activity tracker."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"All you need to do is require the main module and change an option to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". Then you're all set up to use the activity tracker within your game."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Vibez = require(14946453963)("API Key", {\n    ActivityTracker = {\n        Enabled = true, -- Enabled the tracker for players.\n        MinRank = 255, -- The minimum rank that a staff member must be to be tracked.\n        disableWhenInStudio = true, -- Disables when studio play testing.\n        disableWhenAFK = true, -- Disables when player is detected as AFK.\n        disableWhenInPrivateServer = true, -- Disables when player is in a private server.\n        delayBeforeMarkedAFK = 15, -- The amount of seconds to wait before the player is marked AFK.\n\n        kickIfFails = true, -- Used to kick the player if the activity tracker fails to initialize, below is the message for this occurrence.\n        failMessage = "Uh oh! Looks like there was an issue initializing the activity tracker for you. Please try again later!",\n    }\n})\n')),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"getactivity"},(0,r.kt)("a",{parentName:"h3",href:"/VibezAPI/api/VibezAPI#getActivity"},"getActivity")),(0,r.kt)("p",null,"Gets a player's current activity. (Leave blank for everyone's activity)"),(0,r.kt)("p",null,"Parameter(s): ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"userId: (string | number | Player)?")," - The user id of the player you want to get the activity of. ",(0,r.kt)("strong",{parentName:"p"},"OPTIONAL"),(0,r.kt)("br",null)),(0,r.kt)("p",null,"Returns: ",(0,r.kt)("a",{parentName:"p",href:"/VibezAPI/api/VibezAPI#activityResponse"},"activityResponse")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local allPlayerActivity = VibezApi:getActivity()\nlocal myActivity = VibezApi:getActivity(107392833)\n")),(0,r.kt)("h3",{id:"saveactivity"},(0,r.kt)("a",{parentName:"h3",href:"/VibezAPI/api/VibezAPI#saveActivity"},"saveActivity")),(0,r.kt)("p",null,"Saves a player's activity."),(0,r.kt)("p",null,"Parameter(s): ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"userId: (string | number | Player)")," - The user id of the player you want to save the activity of. ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"userRank: number")," - The rank of the player.",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"secondsSpent: number")," - The amount of seconds the player has spent. ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"messagesSent: number")," - The amount of messages the player has sent. ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"Returns: ",(0,r.kt)("a",{parentName:"p",href:"/VibezAPI/api/VibezAPI#httpResponse"},"httpResponse")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"VibezApi:saveActivity(107392833, 200, 10, 5)\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Creating a backup of all player activity"),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'"ServerScriptService/ActivityBackup.lua"','"ServerScriptService/ActivityBackup.lua"':!0},'--// Services \\\\--\nlocal DataStoreService = game:GetService("DataStoreService")\n\n--// Variables \\\\--\nlocal Vibez = require(14946453963)("API Key"):waitUntilLoaded()\nlocal backupDataStore = DataStoreService:GetDataStore("PlayerActivity")\n\n--// Functions \\\\--\nlocal function onGameShutdown()\n    local allActivity = Vibez:getActivity() -- Leaving this blank will invoke all player\'s activity.\n    pcall(backupDataStore.SetAsync, backupDataStore, "Backup", allActivity)\nend\n\n--// Connections \\\\--\ngame.OnClose:Connect(onGameShutdown)\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Adding seconds to a player's activity"),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Vibez = require(14946453963)("API Key"):waitUntilLoaded()\n\nlocal function addActivity(playerUserId: number, secondsSpent: number, messagesSent: number)\n    Vibez:saveActivity(playerUserId, secondsSpent, messagesSent)\nend\n\naddActivity(107392833, 10, 5) -- 107392833 is the user id of the staff member\n'))))}y.isMDXComponent=!0}}]);