"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[230],{4683:e=>{e.exports=JSON.parse('{"functions":[{"name":"Http","desc":"Uses `RequestAsync` to fetch required assets to make this API wrapper work properly. Automatically handles the API key and necessary headers associated with different routes.","params":[{"name":"Route","desc":"","lua_type":"string"},{"name":"Method","desc":"","lua_type":"string?"},{"name":"Headers","desc":"","lua_type":"{ [string]: any }?"},{"name":"Body","desc":"","lua_type":"{ any }?"},{"name":"useNewApi","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"boolean, httpResponse?"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":109,"path":"src/init.lua"}},{"name":"getGroupId","desc":"Fetches the group associated with the api key.","params":[],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","tags":["Public"],"since":"0.1.0","yields":true,"source":{"line":178,"path":"src/init.lua"}},{"name":"getGroupFromUser","desc":"Uses roblox\'s group service to get a player\'s rank.","params":[{"name":"groupId","desc":"","lua_type":"number"},{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":201,"path":"src/init.lua"}},{"name":"onPlayerAdded","desc":"Handles players joining the game and checks for if commands/ui are enabled.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","tags":["Internal"],"since":"0.1.0","source":{"line":232,"path":"src/init.lua"}},{"name":"onPlayerRemoved","desc":"Handles players leaving the game and disconnects any events.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","tags":["Internal"],"since":"0.1.0","source":{"line":273,"path":"src/init.lua"}},{"name":"isPlayerRankOkToProceed","desc":"Compares a rank to the min/max ranks in settings for the commands/ui.","params":[{"name":"playerRank","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","source":{"line":299,"path":"src/init.lua"}},{"name":"getUserIdByName","desc":"Gets a player\'s user identifier via their username.","params":[{"name":"username","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":314,"path":"src/init.lua"}},{"name":"getNameById","desc":"Gets a player\'s username by their userId","params":[{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string?"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":330,"path":"src/init.lua"}},{"name":"createRemote","desc":"Creates / Fetches a remote function in replicated storage for client communication.","params":[],"returns":[{"desc":"","lua_type":"Remote RemoteFunction"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","source":{"line":344,"path":"src/init.lua"}},{"name":"onPlayerChatted","desc":"Handles the main chatting event for commands.","params":[{"name":"Player","desc":"","lua_type":"Player"},{"name":"message","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":367,"path":"src/init.lua"}},{"name":"_checkHttp","desc":"Checks for if HTTP is enabled","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":413,"path":"src/init.lua"}},{"name":"_setRank","desc":"Sets the rank of a player and uses \\"whoCalled\\" to send a message with origin logging name.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"rankId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":430,"path":"src/init.lua"}},{"name":"_Promote","desc":"Promotes a player and creates a fake \\"whoCalled\\" variable.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":476,"path":"src/init.lua"}},{"name":"_Demote","desc":"Demotes a player and uses \\"whoCalled\\", creates one if none is added.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":517,"path":"src/init.lua"}},{"name":"_Fire","desc":"Fires a player and creates a fake \\"whoCalled\\" variable if none is supplied.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","tags":["Internal"],"since":"0.1.0","yields":true,"source":{"line":558,"path":"src/init.lua"}},{"name":"_destroy","desc":"Destroys the class.","params":[],"returns":[],"function_type":"method","tags":["Internal"],"since":"0.1.0","source":{"line":595,"path":"src/init.lua"}},{"name":"_warn","desc":"Displays a warning with the prefix of \\"[Vibez]\\"","params":[{"name":"...","desc":"","lua_type":"...string"}],"returns":[],"function_type":"method","tags":["Internal"],"since":"0.1.0","source":{"line":609,"path":"src/init.lua"}},{"name":"SetRank","desc":"Changes the rank of a player.\\n\\n```lua\\nlocal userId, rankId = 1, 200\\nVibez:SetRank(userId, rankId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"rankId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"Types.rankResponse\\r\\n"}],"function_type":"method","tags":["Public"],"since":"0.1.0","yields":true,"source":{"line":634,"path":"src/init.lua"}},{"name":"Promote","desc":"Promotes a player.\\n\\n```lua\\nlocal userId = 1\\nlocal response = Vibez:Promote(userId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"Types.rankResponse\\r\\n"}],"function_type":"method","tags":["Public"],"since":"0.1.0","yields":true,"source":{"line":652,"path":"src/init.lua"}},{"name":"Demote","desc":"Demotes a player.\\n\\n```lua\\nlocal userId = 1\\nlocal response = Vibez:Demote(userId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"Types.rankResponse\\r\\n"}],"function_type":"method","tags":["Public"],"since":"0.1.0","yields":true,"source":{"line":670,"path":"src/init.lua"}},{"name":"Fire","desc":"Fires a player from the group.","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"Types.rankResponse\\r\\n"}],"function_type":"method","tags":["Public"],"since":"0.1.0","yields":true,"source":{"line":683,"path":"src/init.lua"}},{"name":"ToggleCommands","desc":"Toggles the usage of commands within the experience.","params":[],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","tags":["Public"],"since":"0.1.0","source":{"line":694,"path":"src/init.lua"}},{"name":"UpdateLoggerTitle","desc":"Updates the logger\'s origin name.","params":[{"name":"newTitle","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","tags":["Public"],"since":"0.1.0","source":{"line":712,"path":"src/init.lua"}},{"name":"UpdateKey","desc":"Updates the api key.","params":[{"name":"newApiKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","tags":["Public"],"since":"0.1.0","yields":true,"source":{"line":726,"path":"src/init.lua"}},{"name":"Destroy","desc":"Destroys the VibezAPI class.","params":[],"returns":[],"function_type":"method","tags":["Public"],"since":"0.1.0","source":{"line":757,"path":"src/init.lua"}},{"name":"ToggleUI","desc":"Toggles the client promote/demote/fire UI.","params":[],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","tags":["Public"],"since":"0.1.0","source":{"line":768,"path":"src/init.lua"}},{"name":"getActivity","desc":"Gets the player\'s current activity.","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"httpResponse"}],"function_type":"method","tags":["Public"],"unreleased":true,"yields":true,"source":{"line":786,"path":"src/init.lua"}},{"name":"saveActivity","desc":"Saves the player\'s current activity","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"secondsSpent","desc":"","lua_type":"number"},{"name":"messagesSent","desc":"","lua_type":"(number | { string })?"},{"name":"joinTime","desc":"","lua_type":"number?"},{"name":"leaveTime","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"httpResponse"}],"function_type":"method","tags":["Public"],"since":"0.1.0","source":{"line":809,"path":"src/init.lua"}},{"name":"new","desc":"Constructs the main Vibez API class.\\n\\n```lua\\nlocal myKey = \\"YOUR_API_KEY_HERE\\"\\nlocal VibezAPI = require(script.VibezAPI)\\nlocal Vibez = VibezAPI(myKey)\\n```","params":[{"name":"apiKey","desc":"Your Vibez API key.","lua_type":"string"},{"name":"extraOptions","desc":"Extra settings to configure the api to work for you.","lua_type":"extraOptionsType"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"static","source":{"line":864,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"extraOptionsType","desc":"","fields":[{"name":"isChatCommandsEnabled","lua_type":"boolean","desc":""},{"name":"isUIEnabled","lua_type":"boolean","desc":""},{"name":"commandPrefix","lua_type":"string","desc":""},{"name":"minRank","lua_type":"number","desc":""},{"name":"maxRank","lua_type":"number","desc":""},{"name":"overrideGroupCheckForStudio","lua_type":"boolean","desc":""},{"name":"loggingOriginName","lua_type":"string","desc":""},{"name":"ignoreWarnings","lua_type":"boolean","desc":""}],"source":{"line":33,"path":"src/init.lua"}},{"name":"groupIdResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"groupId","lua_type":"number?","desc":""}],"source":{"line":40,"path":"src/init.lua"}},{"name":"errorResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"errorMessage","lua_type":"string","desc":""}],"source":{"line":47,"path":"src/init.lua"}},{"name":"rankResponse","desc":"","fields":[{"name":"newRank","lua_type":"{ id: number, name: string, rank: number, memberCount: number },","desc":""},{"name":"oldRank","lua_type":"{ id: number, name: string, rank: number, groupInformation: { id: number, name: string, memberCount: number, hasVerifiedBadge: boolean } }","desc":""}],"source":{"line":54,"path":"src/init.lua"}},{"name":"responseBody","desc":"","lua_type":"groupIdResponse | errorResponse | rankResponse","source":{"line":59,"path":"src/init.lua"}},{"name":"httpResponse","desc":"","fields":[{"name":"Body","lua_type":"responseBody","desc":""},{"name":"Headers","lua_type":"{ [string]: any }","desc":""},{"name":"StatusCode","lua_type":"number","desc":""},{"name":"StatusMessage","lua_type":"string?","desc":""},{"name":"Success","lua_type":"boolean","desc":""},{"name":"rawBody","lua_type":"string","desc":""}],"source":{"line":70,"path":"src/init.lua"}}],"name":"VibezAPI","desc":"\\t","source":{"line":872,"path":"src/init.lua"}}')}}]);