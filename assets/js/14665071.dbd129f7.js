"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[880],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,m=c["".concat(s,".").concat(d)]||c[d]||h[d]||r;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},83469:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var o=n(87462),a=(n(67294),n(3905));const r={},i=void 0,l={unversionedId:"Centers/Application Center",id:"Centers/Application Center",title:"Application Center",description:"Implementation",source:"@site/docs/Centers/Application Center.mdx",sourceDirName:"Centers",slug:"/Centers/Application Center",permalink:"/VibezAPI/docs/Centers/Application Center",draft:!1,editUrl:"https://github.com/ItsRune/VibezAPI/edit/master/docs/Centers/Application Center.mdx",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Webhooks",permalink:"/VibezAPI/docs/Features/Examples/Webhooks"},next:{title:"Rank Center",permalink:"/VibezAPI/docs/Centers/Rank Center"}},s={},u=[{value:"Implementation",id:"implementation",level:2},{value:"Important",id:"important",level:3},{value:"General Customization",id:"general-customization",level:2},{value:"UI Customization",id:"ui-customization",level:2},{value:"Colors",id:"colors",level:3},{value:"Text",id:"text",level:3},{value:"Application Customization",id:"application-customization",level:2},{value:"Question Types",id:"question-types",level:2},{value:"Short Answer <strong>*</strong>",id:"short-answer-",level:3},{value:"Long Answer <strong>*</strong>",id:"long-answer-",level:3},{value:"Multiple Choice",id:"multiple-choice",level:3},{value:"Yes or No",id:"yes-or-no",level:4},{value:"Multiple Select",id:"multiple-select",level:3},{value:"Scale",id:"scale",level:3},{value:"Submit",id:"submit",level:3}],p={toc:u},c="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"First things first, you'll need to ",(0,a.kt)("a",{parentName:"p",href:"https://vibez.dev/"},"download it here.")," Once you've done that, you'll need to open the file and publish to your group as a new game. Afterwards you're ready to customize it to your liking."),(0,a.kt)("h3",{id:"important"},"Important"),(0,a.kt)("p",null,"To use the application center, you need to ensure you publish the game and that you have ",(0,a.kt)("inlineCode",{parentName:"p"},"Allow Third Party Teleports")," enabled."),(0,a.kt)("img",{src:"/VibezAPI/allowThirdPartyTeleports.png"}),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("p",null,"Question types with a ",(0,a.kt)("strong",{parentName:"p"},"*")," are unavailable to auto ranking!"),(0,a.kt)("h2",{id:"general-customization"},"General Customization"),(0,a.kt)("p",null,"There's a few general custimization options that you can change to make the application center more unique to your group.\nFirst the necessary option is your Vibez API key, you can generate this by running the command ",(0,a.kt)("inlineCode",{parentName:"p"},"/keys create group-id:0"),".\nThe other options are optional and can be customized to your liking."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    apiKey = "YOUR_API_KEY", -- Your Vibez API key\n    autoSaveInterval = 45 -- The interval in seconds that the application will auto save the user\'s progress.\n    allowBackToApplicationSelection = true, -- Whether or not to allow the user to go back to the application selection screen.\n\n    timezoneToUse = "EDT", -- The timezone to use for the application center.\n    -- The timezone to use for the application center can be found here:\n    -- https://itsrune.github.io/RoTime/docs/Timezones#defaults\n}\n')),(0,a.kt)("h2",{id:"ui-customization"},"UI Customization"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"NOTE:")," All UI Customization is done within the ",(0,a.kt)("inlineCode",{parentName:"p"},"UI")," table."),(0,a.kt)("h3",{id:"colors"},"Colors"),(0,a.kt)("p",null,"At the time of writing this there are currently 4 colors that can be customized.\nThese colors are the primary, secondary, background, and text colors."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"{\n    backgroundColor = Color3.fromRGB(224, 141, 186),\n    foregroundColor = Color3.fromRGB(48, 48, 48),\n    textColor = Color3.fromRGB(255, 255, 255),\n    strokeColor = Color3.fromRGB(255, 147, 246)\n}\n")),(0,a.kt)("h3",{id:"text"},"Text"),(0,a.kt)("p",null,"You can customize the text that is displayed on the application center.\nThis includes the application center's title and when an application hasn't been started's text."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    Header = "My Application Center!", -- Warning: This text gets filtered, if it detects a hashtagged word: it\'ll be disabled.\n    appSelectionNotStartedText = "Not Started", -- The text displayed when the player hasn\'t started an application yet.\n}\n')),(0,a.kt)("h2",{id:"application-customization"},"Application Customization"),(0,a.kt)("p",null,"This category is where you'll be able to make each application unique."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"{\n    Title = \"My Application\", -- The title of the application\n\n    -- Webhooks are primarily used for logging applications when auto ranking is disabled,\n    -- however they also will be used for notifying HR+ members when an application fails\n    -- to rank.\n    webhookToUse = \"https://discord.com/api/webhooks/1234567890/abcdefghijklmnopqrstuvwxyz\",\n\n    --[[\n        These webhook settings include a few formatting codes for customizing the webhook embed.\n        Formatting Codes:\n        <PLAYER_NAME>           | A player's username\n        \n        <PLAYER_ID>             | A player's user id\n        \n        <PLAYER_DISPLAY_NAME>   | A player's display name\n\n        <APP_NAME>              | The name of the application\n        \n        <TIME_TAKEN>            | The amount of time taken, ex: 24m 16s\n        \n        <BEGAN_TIME>            | A clock time using 'timezoneToUse' and RoTime formatted HH:MM:SS\n                                which represents when a player started an application, ex: 07:11:52\n        <BEGAN_DATE>            | A date formatted in MM/DD/YYYY which represents when a player\n                                started an application, ex: 01/08/2024\n        <END_TIME>              | A clock time using 'timezoneToUse' and RoTime formatted HH:MM:SS\n                                which represents when a player ended the application.\n        <END_DATE>              | A date formatted in MM/DD/YYYY which represents when a player ended an\n                                application, ex: 01/08/2024\n    ]]--\n    webhookEmbedTitle = \"<PLAYER_NAME> <APP_NAME> Results\", -- The title of the webhook embed\n    webhookEmbedDescription = [[\n        Application Name: <APP_NAME>\n        Time Taken: <TIME_TAKEN>\n        Began Time: <BEGAN_TIME> <BEGAN_DATE>\n        End Time: <END_TIME> <END_DATE>\n    ]],\n\n    durationsAndAmounts = {\n        --[[\n            How long until a player can apply again.\n            To figure this out:\n            60 | 1 minute\n            3600 | 1 hour\n            86400 | 1 day\n            86400 * 30 | 1 month\n            86400 * 365 | 1 year\n            -1 | Disable, meaning they can rejoin and apply instantly\n        ]]--\n        sendApplcationDuration = -1,\n\n        -- Amount of applications a player can send. (-1 means disabled)\n        amountOfApplicationsFromPlayer = -1,\n    },\n\n    AutoRank = {\n        Enabled = true, -- Whether or not to enable auto ranking\n        toRankTo = 3, -- The rank to auto-rank to\n        MinimumScore = 5, -- The minimum score required to auto rank\n        --[[\n            Technical Information:\n\n            Each question is worth 1 point unless it's a 'Multi Select'.\n            If a player selects all the answers no matter what, the server\n            will remove points for every answer that's not correct.\n\n            Example:\n            -- Setup\n            Buttons = {\n                {\n                    Text = \"Blah\",\n                    isCorrect = true,\n                },\n                {\n                    Text = \"Blah2\",\n                    isCorrect = false,\n                }\n            }\n\n            -- Selected:\n            - Blah\n            - Blah2\n            Result: 0 (cuz 1 + -1 = 0)\n\n            -- Selected:\n            - Blah2\n            Result: -1\n        ]]\n        --\n    }\n}\n")),(0,a.kt)("h2",{id:"question-types"},"Question Types"),(0,a.kt)("h3",{id:"short-answer-"},"Short Answer ",(0,a.kt)("strong",{parentName:"h3"},"*")),(0,a.kt)("p",null,"Short answer questions allow you to ask a question and have the user type in their answer into a small box."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    Question = "What is the capital of the United States?", -- The question you want to ask\n    Type = "Short Answer", -- The type of question\n    Meta = {\n        Placeholder = "Type your answer here...", -- The placeholder text that will be displayed in the text box\n    }\n}\n')),(0,a.kt)("h3",{id:"long-answer-"},"Long Answer ",(0,a.kt)("strong",{parentName:"h3"},"*")),(0,a.kt)("p",null,"Long answer questions are similar to short answer questions, but allow the user to type in a longer response."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    Question = "What is the capital of the United States?", -- The question you want to ask\n    Type = "Long Answer", -- The type of question\n    Meta = {\n        Placeholder = "Type your answer here...", -- The placeholder text that will be displayed in the text box\n    }\n}\n')),(0,a.kt)("h3",{id:"multiple-choice"},"Multiple Choice"),(0,a.kt)("p",null,"Multiple choice questions are the most common type of question.\nThey allow you to provide a question and multiple answers for the user to choose from.\nYou can also specify the correct answer."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    Question = "How many states does the United States have?", -- The question you want to ask\n    Type = "Multiple Choice", -- The type of question\n    Meta = {\n        Buttons = {\n            {\n                Text = "20", -- The text that will be displayed on the button\n                isCorrect = false, -- Whether or not this is the correct answer\n            },\n            {\n                Text = "50", -- The text that will be displayed on the button\n                isCorrect = true, -- Whether or not this is the correct answer\n            },\n            {\n                Text = "70", -- The text that will be displayed on the button\n                isCorrect = false, -- Whether or not this is the correct answer\n            },\n            {\n                Text = "20", -- The text that will be displayed on the button\n                isCorrect = false, -- Whether or not this is the correct answer\n            }\n        }\n    }\n}\n')),(0,a.kt)("h4",{id:"yes-or-no"},"Yes or No"),(0,a.kt)("p",null,"Behind the scenes, yes or no questions are just multiple choice questions with only two options.\nYou can use the same format as multiple choice questions to create a yes or no question."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    Question = "Is the sky blue?",\n    Type = "Multiple Choice",\n    Meta = {\n        Buttons = {\n            {\n                Text = "Yes",\n                isCorrect = true,\n            },\n\n            {\n                Text = "No",\n                isCorrect = false,\n            },\n        },\n    },\n},\n')),(0,a.kt)("h3",{id:"multiple-select"},"Multiple Select"),(0,a.kt)("p",null,"Multiple select questions are similar to multiple choice questions, but allow the user to select multiple answers."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    Question = "Which of the following are colors?", -- The question you want to ask\n    Type = "Multiple Select", -- The type of question\n    Meta = {\n        Max = 4, -- The max amount of random questions that will be shown. (The app center can only support a max of 4 for right now.)\n        Buttons = {\n            {\n                Text = "Red", -- The text that will be displayed on the button\n                isCorrect = true, -- Whether or not this is the correct answer\n            },\n            {\n                Text = "Ceiling", -- The text that will be displayed on the button\n                isCorrect = false, -- Whether or not this is the correct answer\n            },\n            {\n                Text = "Floor", -- The text that will be displayed on the button\n                isCorrect = false, -- Whether or not this is the correct answer\n            },\n            {\n                Text = "Red", -- The text that will be displayed on the button\n                isCorrect = true, -- Whether or not this is the correct answer\n            },\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"scale"},"Scale"),(0,a.kt)("p",null,"Scale questions allow you to ask a question and have the user select a value between a minimum and maximum value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    Question = "On a scale of 1 to 10, how much do you like the color red?", -- The question you want to ask\n    Type = "Scale", -- The type of question\n    Min = 1, -- The minimum value the user can select\n    Max = 10, -- The maximum value the user can select\n    Meta = {\n        minimumRequired = 4, -- The minimum required value the user must select\n        Tolerance = ">=" -- The tolerance of the minimum required value. (>=, <=, ==, >, <)\n    }\n}\n')),(0,a.kt)("h3",{id:"submit"},"Submit"),(0,a.kt)("p",null,"This isn't a question type, but if you'd like to customize the submit text you can do so by adding your own at the end of your application.\nIf none is supplied, the default text is shown below and will be added automatically."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    Question = "Are you ready to submit your application for review?", -- The question you want to ask\n    Type = "Submit", -- The type of question\n}\n')))}h.isMDXComponent=!0}}]);