"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[348],{4683:e=>{e.exports=JSON.parse('{"functions":[{"name":"_checkVersion","desc":"Gets and checks the current version to the version saved to the module.","params":[],"returns":[{"desc":"","lua_type":"()"}],"function_type":"method","tags":["Unavailable"],"since":"2.4.0","private":true,"yields":true,"source":{"line":416,"path":"src/init.lua"}},{"name":"_promisify","desc":"Uses `Promise.lua` to attempt to promisify a method. (Only applies when `usePromises` is set to true).\\n\\n:::danger BROKEN\\nThis method does nothing at the moment.\\n:::","params":[{"name":"functionToBind","desc":"","lua_type":"(...any) -> ...any"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Promise | any"}],"function_type":"method","tags":["Unavailable"],"since":"1.0.12","private":true,"yields":true,"source":{"line":449,"path":"src/init.lua"}},{"name":"Http","desc":"Uses `RequestAsync` to fetch required assets to make this API wrapper work properly. Automatically handles the API key and necessary headers associated with different routes.","params":[{"name":"Route","desc":"","lua_type":"string"},{"name":"Method","desc":"","lua_type":"string?"},{"name":"Headers","desc":"","lua_type":"{ [string]: any }?"},{"name":"Body","desc":"","lua_type":"{ any }?"},{"name":"useOldApi","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"boolean, httpResponse?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":472,"path":"src/init.lua"}},{"name":"getGroupId","desc":"Fetches the group associated with the api key.","params":[],"returns":[{"desc":"","lua_type":"number | -1"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":550,"path":"src/init.lua"}},{"name":"_getGroupRankFromName","desc":"Fetches the group\'s role name\'s rank value.\\n\\nAllows for partial naming, example:\\n```lua\\n-- Using Frivo\'s group ID\\nlocal rankNumber = VibezAPI:_getGroupRankFromName(\\"facili\\") --\x3e Expected: 250 (Facility Developer)\\n```","params":[{"name":"groupRoleName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":599,"path":"src/init.lua"}},{"name":"_getGroupFromUser","desc":"Uses roblox\'s group service to get a player\'s rank.","params":[{"name":"groupId","desc":"","lua_type":"number"},{"name":"userId","desc":"","lua_type":"number"},{"name":"force","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"{ any }"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":631,"path":"src/init.lua"}},{"name":"_onPlayerAdded","desc":"Handles players joining the game and checks for if commands/ui are enabled.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":694,"path":"src/init.lua"}},{"name":"_onPlayerRemoved","desc":"Handles players leaving the game and disconnects any events.","params":[{"name":"Player","desc":"","lua_type":"Player"},{"name":"isPlayerStillInGame","desc":"","lua_type":"boolean?"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":744,"path":"src/init.lua"}},{"name":"_isPlayerRankOkToProceed","desc":"Compares a rank to the min/max ranks in settings for the commands/ui.","params":[{"name":"toCheck","desc":"","lua_type":"number"},{"name":"minCheck","desc":"","lua_type":"number"},{"name":"maxCheck","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","private":true,"source":{"line":794,"path":"src/init.lua"}},{"name":"_getUserIdByName","desc":"Gets a player\'s user identifier via their username.","params":[{"name":"username","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":809,"path":"src/init.lua"}},{"name":"_getNameById","desc":"Gets a player\'s username by their userId","params":[{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":825,"path":"src/init.lua"}},{"name":"_createRemote","desc":"Creates / Fetches a remote function in replicated storage for client communication.","params":[],"returns":[{"desc":"","lua_type":"Remote RemoteFunction"}],"function_type":"method","since":"1.0.0","private":true,"source":{"line":843,"path":"src/init.lua"}},{"name":"_getRoleIdFromRank","desc":"Gets the role id of a rank.","params":[{"name":"rank","desc":"","lua_type":"number | string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":894,"path":"src/init.lua"}},{"name":"_getPlayers","desc":"Gets the closest match to a player\'s username who\'s in game.","params":[{"name":"playerWhoCalled","desc":"","lua_type":"Player"},{"name":"usernames","desc":"","lua_type":"{string}"}],"returns":[{"desc":"","lua_type":"{Player?}"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":937,"path":"src/init.lua"}},{"name":"_giveSticks","desc":"Gives a Player the ranking sticks.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","since":"1.3.0","private":true,"yields":true,"source":{"line":1020,"path":"src/init.lua"}},{"name":"_removeSticks","desc":"Removes ranking sticks from a player.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","since":"1.3.0","private":true,"yields":true,"source":{"line":1052,"path":"src/init.lua"}},{"name":"setRankStickTool","desc":"Sets the ranking stick\'s tool.","params":[{"name":"tool","desc":"","lua_type":"Tool | Model"}],"returns":[],"function_type":"method","since":"1.3.0","yields":true,"source":{"line":1082,"path":"src/init.lua"}},{"name":"_onPlayerChatted","desc":"Handles the main chatting event for commands.","params":[{"name":"Player","desc":"","lua_type":"Player"},{"name":"message","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":1145,"path":"src/init.lua"}},{"name":"_checkHttp","desc":"Checks for if HTTP is enabled","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":1201,"path":"src/init.lua"}},{"name":"_checkPlayerForRankChange","desc":"Disconnects and reconnects player events to fix permissions within servers.","params":[{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"()"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":1217,"path":"src/init.lua"}},{"name":"_warn","desc":"Displays a warning with the prefix of \\"[Vibez]\\"","params":[{"name":"...","desc":"","lua_type":"...string"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":1241,"path":"src/init.lua"}},{"name":"_addLog","desc":"Adds an entry into the in-game logs.","params":[{"name":"calledBy","desc":"","lua_type":"Player"},{"name":"Action","desc":"","lua_type":"string"},{"name":"affectedUsers","desc":"","lua_type":"{ { Name: string, UserId: number } }"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","since":"2.3.6","private":true,"source":{"line":1261,"path":"src/init.lua"}},{"name":"_buildAttributes","desc":"Builds the attributes of the settings for workspace.","params":[],"returns":[],"function_type":"method","since":"2.3.1","private":true,"source":{"line":1283,"path":"src/init.lua"}},{"name":"setRank","desc":"Sets the rank of a player and `whoCalled` (Optional) is used for logging purposes.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"rankId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }?"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1322,"path":"src/init.lua"}},{"name":"Promote","desc":"Promotes a player and `whoCalled` (Optional) is used for logging purposes.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }?"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1381,"path":"src/init.lua"}},{"name":"Demote","desc":"Demotes a player and `whoCalled` (Optional) is used for logging purposes.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }?"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1425,"path":"src/init.lua"}},{"name":"Fire","desc":"Fires a player and `whoCalled` (Optional) is used for logging purposes.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }?"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1469,"path":"src/init.lua"}},{"name":"addCommand","desc":"Creates a new command within our systems.","params":[{"name":"commandName","desc":"","lua_type":"string"},{"name":"commandAliases","desc":"","lua_type":"{string}?"},{"name":"commandOperation","desc":"","lua_type":"(Player: Player, Args: { string }, addLog: (calledBy: Player, Action: string, affectedUsers: {Player}?, ...any) -> { calledBy: Player, affectedUsers: { Player }?, affectedCount: number?, Metadata: any }) -> ()"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","since":"2.3.6","source":{"line":1513,"path":"src/init.lua"}},{"name":"addCommandOperation","desc":"Adds a command operation code.\\n\\n:::caution\\nThis method will not work if there\'s already an existing operation name!\\n:::\\n\\n```lua\\n-- This operation comes by default, no need to rewrite it.\\nVibez:addCommandOperation(\\n\\t\\"Team\\", -- Name of the operation.\\n\\t\\"%\\", -- Prefix before the operation argument.\\n\\tfunction(playerToCheck: Player, incomingArgument: string, internalFunctions)\\n\\t\\treturn playerToCheck.Team ~= nil\\n\\t\\t\\tand string.sub(string.lower(playerToCheck.Team.Name), 0, #incomingArgument)\\n\\t\\t\\t\\t== string.lower(incomingArgument)\\n\\tend\\n)\\n```\\n\\nThe `internalFunctions` parameter contains a table of functions that are meant to ease the developmental process of operations. Here\'s an example of one of them being used:\\n```lua\\nVibez:addCommandOperation(\\n\\t\\"SHR\\", -- Name of the operation.\\n\\t\\"shr\\", -- Prefix before the operation argument.\\n\\tfunction(playerToCheck: Player, incomingArgument: string, internalFunctions)\\n\\t\\tlocal playerGroupInfo = internalFunctions\\n\\t\\t\\t._getGroupFromUser(Vibez, Vibez.GroupId, playerToCheck.UserId):await()\\n\\n\\t\\treturn playerGroupInfo.Rank >= 250\\n\\tend\\n)\\n```","params":[{"name":"operationName","desc":"","lua_type":"string"},{"name":"operationCode","desc":"","lua_type":"string"},{"name":"operationFunction","desc":"","lua_type":"(playerToCheck: Player, incomingArgument: string, internalFunctions: vibezCommandFunctions) -> boolean"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":1611,"path":"src/init.lua"}},{"name":"removeCommandOperation","desc":"Removes a command operation code.\\n\\n```lua\\nVibez:removeCommandOperation(\\"Team\\")\\n```","params":[{"name":"operationName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":1651,"path":"src/init.lua"}},{"name":"updateLoggerName","desc":"Updates the logger\'s origin name.","params":[{"name":"newTitle","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":1664,"path":"src/init.lua"}},{"name":"updateKey","desc":"Updates the api key.","params":[{"name":"newApiKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1679,"path":"src/init.lua"}},{"name":"isPlayerBoostingDiscord","desc":"Checks if the user is currently a nitro booster. (Only specific guilds have this feature)","params":[{"name":"User","desc":"","lua_type":"number | string | Player"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":1716,"path":"src/init.lua"}},{"name":"Destroy","desc":"Destroys the VibezAPI class.","params":[],"returns":[],"function_type":"method","since":"1.0.0","source":{"line":1764,"path":"src/init.lua"}},{"name":"toggleUI","desc":"Toggles the client promote/demote/fire UI.","params":[{"name":"override","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","since":"1.0.0","source":{"line":1778,"path":"src/init.lua"}},{"name":"getWebhookBuilder","desc":"Initializes the Hooks class with the specified webhook.","params":[{"name":"webhook","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"VibezHooks"}],"function_type":"method","since":"1.0.0","source":{"line":1805,"path":"src/init.lua"}},{"name":"addBlacklist","desc":"Adds a blacklist to your api key.","params":[{"name":"userToBlacklist","desc":"","lua_type":"(Player string | number)"},{"name":"Reason","desc":"","lua_type":"string?"},{"name":"blacklistExecutedBy","desc":"","lua_type":"(Player string | number)?"}],"returns":[{"desc":"","lua_type":"blacklistResponse"}],"function_type":"method","since":"1.1.0","source":{"line":1821,"path":"src/init.lua"}},{"name":"deleteBlacklist","desc":"Deletes a blacklist from your api key.","params":[{"name":"userToDelete","desc":"","lua_type":"(Player string | number)"}],"returns":[{"desc":"","lua_type":"blacklistResponse"}],"function_type":"method","since":"1.1.0","source":{"line":1874,"path":"src/init.lua"}},{"name":"getBlacklists","desc":"Gets either a full list of blacklists or checks if a player is currently blacklisted.","params":[{"name":"userId","desc":"","lua_type":"(string | number)?"}],"returns":[{"desc":"","lua_type":"blacklistResponse"}],"function_type":"method","since":"1.1.0","source":{"line":1910,"path":"src/init.lua"}},{"name":"isUserBlacklisted","desc":"Gets either a full list of blacklists or checks if a player is currently blacklisted.","params":[{"name":"userId","desc":"","lua_type":"(string | number)?"}],"returns":[{"desc":"","lua_type":"blacklistResponse"}],"function_type":"method","since":"1.1.0","source":{"line":1963,"path":"src/init.lua"}},{"name":"waitUntilLoaded","desc":"Gets a player\'s or everyone\'s current activity","params":[],"returns":[{"desc":"","lua_type":"VibezAPI?"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":1988,"path":"src/init.lua"}},{"name":"getActivity","desc":"Gets a player\'s or everyone\'s current activity","params":[{"name":"userId","desc":"","lua_type":"(string | number)?"}],"returns":[{"desc":"","lua_type":"activityResponse"}],"function_type":"method","since":"1.0.0","source":{"line":2014,"path":"src/init.lua"}},{"name":"saveActivity","desc":"Saves the player\'s current activity","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"userRank","desc":"","lua_type":"number"},{"name":"secondsSpent","desc":"","lua_type":"number"},{"name":"messagesSent","desc":"","lua_type":"(number | { string })?"},{"name":"shouldFetchGroupRank","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"httpResponse"}],"function_type":"method","since":"1.0.0","source":{"line":2037,"path":"src/init.lua"}},{"name":"_playerIsValidStaff","desc":"Returns the staff member\'s cached data.","params":[{"name":"Player","desc":"","lua_type":"Player | number | string"}],"returns":[{"desc":"","lua_type":"{ Player, number } | ()"}],"function_type":"method","since":"2.1.2","private":true,"source":{"line":2091,"path":"src/init.lua"}},{"name":"_initialize","desc":"Initializes the entire module.","params":[{"name":"apiKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"()"}],"function_type":"method","since":"1.3.0","private":true,"source":{"line":2113,"path":"src/init.lua"}},{"name":"new","desc":":::caution Notice\\nThis method can be used as a normal function or invoke the \\".new\\" function:    \\n`require(14946453963)(\\"API Key\\")`  \\n`require(14946453963).new(\\"API Key\\")`\\n:::\\n\\nConstructs the main Vibez API class.\\n\\n```lua\\nlocal myKey = \\"YOUR_API_KEY_HERE\\"\\nlocal VibezAPI = require(14946453963)\\nlocal Vibez = VibezAPI(myKey)\\n```","params":[{"name":"apiKey","desc":"Your Vibez API key.","lua_type":"string"},{"name":"extraOptions","desc":"Extra settings to configure the api to work for you.","lua_type":"extraOptionsType"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"static","tags":["Constructor"],"source":{"line":2277,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"extraOptionsType","desc":"","fields":[{"name":"Commands","lua_type":"{ Enabled: boolean, useDefaultNames: boolean, MinRank: number<0-255>, MaxRank: number<0-255>, Prefix: string, Alias: {string?} }","desc":""},{"name":"RankSticks","lua_type":"{ Enabled: boolean, MinRank: number<0-255>, MaxRank: number<0-255>, SticksModel: Model? }","desc":""},{"name":"Interface","lua_type":"{ Enabled: boolean, MinRank: number<0-255>, MaxRank: number<0-255> }","desc":""},{"name":"Notifications","lua_type":"{ Enabled: boolean, Position: String }","desc":""},{"name":"ActivityTracker","lua_type":"{ Enabled: boolean, MinRank: number<0-255>, disabledWhenInStudio: boolean, delayBeforeMarkedAFK: number, kickIfFails: boolean, failMessage: string }","desc":""},{"name":"Misc","lua_type":"{ originLoggerText: string, ignoreWarnings: boolean, rankingCooldown: number, overrideGroupCheckForStudio: boolean, isAsync: boolean, usePromises: boolean }","desc":""}],"source":{"line":33,"path":"src/init.lua"}},{"name":"groupIdResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"groupId","lua_type":"number?","desc":""}],"private":true,"source":{"line":41,"path":"src/init.lua"}},{"name":"errorResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"errorMessage","lua_type":"string","desc":""}],"private":true,"source":{"line":49,"path":"src/init.lua"}},{"name":"rankResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"message","lua_type":"string","desc":""},{"name":"data","lua_type":"{ newRank: { id: number, name: string, rank: number, memberCount: number }, oldRank: { id: number, name: string, rank: number, groupInformation: { id: number, name: string, memberCount: number, hasVerifiedBadge: boolean } } }","desc":""}],"private":true,"source":{"line":58,"path":"src/init.lua"}},{"name":"userBlacklistResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"data","lua_type":"{ blacklisted: boolean, reason: string }","desc":""}],"private":true,"source":{"line":66,"path":"src/init.lua"}},{"name":"fullBlacklists","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"blacklists:","lua_type":"{ [number | string]: { reason: string, blacklistedBy: number } }","desc":""}],"private":true,"source":{"line":74,"path":"src/init.lua"}},{"name":"vibezCommandFunctions","desc":"","fields":[{"name":"getGroupRankFromName","lua_type":"(self: VibezAPI, groupRoleName: string) -> number?","desc":""},{"name":"getGroupFromUser","lua_type":"(self: VibezAPI, groupId: number, userId: number) -> { any }?","desc":""},{"name":"Http","lua_type":"(self: VibezAPI, Route: string, Method: string?, Headers: { [string]: any }, Body: { any }) -> httpResponse","desc":""}],"private":true,"source":{"line":83,"path":"src/init.lua"}},{"name":"infoResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"message","lua_type":"string","desc":""}],"private":true,"source":{"line":91,"path":"src/init.lua"}},{"name":"activityResponse","desc":"","fields":[{"name":"secondsUserHasSpent","lua_type":"number","desc":""},{"name":"messagesUserHasSent","lua_type":"number","desc":""},{"name":"detailsLogs","lua_type":"[ {timestampLeftAt: number, secondsUserHasSpent: number, messagesUserHasSent: number}? ]","desc":""}],"private":true,"source":{"line":100,"path":"src/init.lua"}},{"name":"responseBody","desc":"","lua_type":"groupIdResponse | errorResponse | rankResponse","private":true,"source":{"line":106,"path":"src/init.lua"}},{"name":"httpResponse","desc":"","fields":[{"name":"Body","lua_type":"responseBody","desc":""},{"name":"Headers","lua_type":"{ [string]: any }","desc":""},{"name":"StatusCode","lua_type":"number","desc":""},{"name":"StatusMessage","lua_type":"string?","desc":""},{"name":"Success","lua_type":"boolean","desc":""},{"name":"rawBody","lua_type":"string","desc":""}],"private":true,"source":{"line":118,"path":"src/init.lua"}}],"name":"VibezAPI","desc":":::important\\nWhen using this module, we recommend using the number-based format rather than importing the scripts into the game.\\n:::\\n\\t","source":{"line":2291,"path":"src/init.lua"}}')}}]);