"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[348],{4683:e=>{e.exports=JSON.parse('{"functions":[{"name":"_promisify","desc":"Uses `Promise.lua` to attempt to promisify a method. (Only applies when `usePromises` is set to true).","params":[{"name":"functionToBind","desc":"","lua_type":"(...any) -> ...any"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Promise | any"}],"function_type":"method","tags":["Unavailable"],"since":"1.0.12","private":true,"yields":true,"source":{"line":187,"path":"src/init.lua"}},{"name":"Http","desc":"Uses `RequestAsync` to fetch required assets to make this API wrapper work properly. Automatically handles the API key and necessary headers associated with different routes.","params":[{"name":"Route","desc":"","lua_type":"string"},{"name":"Method","desc":"","lua_type":"string?"},{"name":"Headers","desc":"","lua_type":"{ [string]: any }?"},{"name":"Body","desc":"","lua_type":"{ any }?"},{"name":"useOldApi","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"boolean, httpResponse?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":210,"path":"src/init.lua"}},{"name":"getGroupId","desc":"Fetches the group associated with the api key.","params":[],"returns":[{"desc":"","lua_type":"number | -1"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":288,"path":"src/init.lua"}},{"name":"_getGroupRankFromName","desc":"Fetches the group\'s role name\'s rank value.\\n\\nAllows for partial naming, example:\\n```lua\\n-- Using Frivo\'s group ID\\nlocal rankNumber = VibezAPI:_getGroupRankFromName(\\"facili\\") --\x3e Expected: 250 (Facility Developer)\\n```","params":[{"name":"groupRoleName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":317,"path":"src/init.lua"}},{"name":"_getGroupFromUser","desc":"Uses roblox\'s group service to get a player\'s rank.","params":[{"name":"groupId","desc":"","lua_type":"number"},{"name":"userId","desc":"","lua_type":"number"},{"name":"force","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"{ any }"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":349,"path":"src/init.lua"}},{"name":"_onPlayerAdded","desc":"Handles players joining the game and checks for if commands/ui are enabled.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":408,"path":"src/init.lua"}},{"name":"_onPlayerRemoved","desc":"Handles players leaving the game and disconnects any events.","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":461,"path":"src/init.lua"}},{"name":"_onGameShutdown","desc":"Fires when the game\'s server is shutting down.","params":[],"returns":[],"function_type":"method","since":"1.1.0","private":true,"source":{"line":501,"path":"src/init.lua"}},{"name":"_isPlayerRankOkToProceed","desc":"Compares a rank to the min/max ranks in settings for the commands/ui.","params":[{"name":"toCheck","desc":"","lua_type":"number"},{"name":"minCheck","desc":"","lua_type":"number"},{"name":"maxCheck","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","private":true,"source":{"line":524,"path":"src/init.lua"}},{"name":"_getUserIdByName","desc":"Gets a player\'s user identifier via their username.","params":[{"name":"username","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":539,"path":"src/init.lua"}},{"name":"_getNameById","desc":"Gets a player\'s username by their userId","params":[{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":555,"path":"src/init.lua"}},{"name":"_createRemote","desc":"Creates / Fetches a remote function in replicated storage for client communication.","params":[{"name":"alreadyAttemptedLoopCheck","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"Remote RemoteFunction"}],"function_type":"method","since":"1.0.0","private":true,"source":{"line":570,"path":"src/init.lua"}},{"name":"_getRoleIdFromRank","desc":"Gets the role id of a rank.","params":[{"name":"rank","desc":"","lua_type":"number | string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":620,"path":"src/init.lua"}},{"name":"_getPlayers","desc":"Gets the closest match to a player\'s username who\'s in game.","params":[{"name":"usernames","desc":"","lua_type":"{string}"}],"returns":[{"desc":"","lua_type":"{Player?}"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":663,"path":"src/init.lua"}},{"name":"_onPlayerChatted","desc":"Handles the main chatting event for commands.","params":[{"name":"Player","desc":"","lua_type":"Player"},{"name":"message","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":709,"path":"src/init.lua"}},{"name":"_checkHttp","desc":"Checks for if HTTP is enabled","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":763,"path":"src/init.lua"}},{"name":"_setRank","desc":"Sets the rank of a player and uses \\"whoCalled\\" to send a message with origin logging name.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"rankId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":780,"path":"src/init.lua"}},{"name":"_Promote","desc":"Promotes a player and creates a fake \\"whoCalled\\" variable.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":835,"path":"src/init.lua"}},{"name":"_Demote","desc":"Demotes a player and uses \\"whoCalled\\", creates one if none is added.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":876,"path":"src/init.lua"}},{"name":"_Fire","desc":"Fires a player and creates a fake \\"whoCalled\\" variable if none is supplied.","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","private":true,"yields":true,"source":{"line":917,"path":"src/init.lua"}},{"name":"_warn","desc":"Displays a warning with the prefix of \\"[Vibez]\\"","params":[{"name":"...","desc":"","lua_type":"...string"}],"returns":[],"function_type":"method","since":"1.0.0","private":true,"source":{"line":955,"path":"src/init.lua"}},{"name":"setRank","desc":"Changes the rank of a player.\\n\\n```lua\\nlocal userId, rankId = 1, 200\\nVibez:setRank(userId, rankId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"rankId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":980,"path":"src/init.lua"}},{"name":"Promote","desc":"Promotes a player.\\n\\n```lua\\nlocal userId = 1\\nlocal response = Vibez:Promote(userId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":999,"path":"src/init.lua"}},{"name":"Demote","desc":"Demotes a player.\\n\\n```lua\\nlocal userId = 1\\nlocal response = Vibez:Demote(userId)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1018,"path":"src/init.lua"}},{"name":"Fire","desc":"Fires a player from the group.","params":[{"name":"userId","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1032,"path":"src/init.lua"}},{"name":"setRankWithCaller","desc":"Changes the rank of a player & logs with the Username/UserId who used the function.\\n\\n```lua\\nlocal userId, rankId = 1, 200\\nlocal idOfCaller, nameOfCaller = 1, \\"ROBLOX\\"\\nVibez:setRankWithCaller(userId, rankId, 1, nameOfCaller)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"rankId","desc":"","lua_type":"string | number"},{"name":"idOfUser","desc":"","lua_type":"number"},{"name":"nameOfUser","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1055,"path":"src/init.lua"}},{"name":"promoteWithCaller","desc":"Promotes a player & logs with the Username/UserId who used the function.\\n\\n```lua\\nlocal userId = 1\\nlocal idOfCaller, nameOfCaller = 1, \\"ROBLOX\\"\\nVibez:promoteWithCaller(userId, 1, nameOfCaller)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"idOfUser","desc":"","lua_type":"number"},{"name":"nameOfUser","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1089,"path":"src/init.lua"}},{"name":"demoteWithCaller","desc":"Demotes a player & logs with the Username/UserId who used the function.\\n\\n```lua\\nlocal userId = 1\\nlocal idOfCaller, nameOfCaller = 1, \\"ROBLOX\\"\\nVibez:demoteWithCaller(userId, 1, nameOfCaller)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"idOfUser","desc":"","lua_type":"number"},{"name":"nameOfUser","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1118,"path":"src/init.lua"}},{"name":"fireWithCaller","desc":"Fires a player & logs with the Username/UserId who used the function.\\n\\n```lua\\nlocal userId = 1\\nlocal idOfCaller, nameOfCaller = 1, \\"ROBLOX\\"\\nVibez:fireWithCaller(userId, 1, nameOfCaller)\\n```","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"idOfUser","desc":"","lua_type":"number"},{"name":"nameOfUser","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1145,"path":"src/init.lua"}},{"name":"toggleCommands","desc":"Toggles the usage of commands within the experience.","params":[{"name":"override","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":1163,"path":"src/init.lua"}},{"name":"addCommandOperation","desc":"Adds a command operation code.\\n\\n:::caution\\nThis method will not work if there\'s already an existing operation name!\\n:::\\n\\n```lua\\n-- This operation comes by default, no need to rewrite it.\\nVibez:addCommandOperation(\\n\\t\\"Team\\", -- Name of the operation.\\n\\t\\"%\\", -- Prefix before the operation argument.\\n\\tfunction(playerToCheck: Player, incomingArgument: string, internalFunctions)\\n\\t\\treturn playerToCheck.Team ~= nil\\n\\t\\t\\tand string.sub(string.lower(playerToCheck.Team.Name), 0, #incomingArgument)\\n\\t\\t\\t\\t== string.lower(incomingArgument)\\n\\tend\\n)\\n```\\n\\nThe `internalFunctions` parameter contains a table of functions that are meant to ease the developmental process of operations. Here\'s an example of one of them being used:\\n```lua\\nVibez:addCommandOperation(\\n\\t\\"SHR\\", -- Name of the operation.\\n\\t\\"shr\\", -- Prefix before the operation argument.\\n\\tfunction(playerToCheck: Player, incomingArgument: string, internalFunctions)\\n\\t\\tlocal playerGroupInfo = internalFunctions\\n\\t\\t\\t._getGroupFromUser(Vibez, Vibez.GroupId, playerToCheck.UserId):await()\\n\\n\\t\\treturn playerGroupInfo.Rank >= 250\\n\\tend\\n)\\n```","params":[{"name":"operationName","desc":"","lua_type":"string"},{"name":"operationCode","desc":"","lua_type":"string"},{"name":"operationFunction","desc":"","lua_type":"(playerToCheck: Player, incomingArgument: string, internalFunctions: vibezCommandFunctions) -> boolean"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":1223,"path":"src/init.lua"}},{"name":"removeCommandOperation","desc":"Removes a command operation code.\\n\\n```lua\\nVibez:removeCommandOperation(\\"Team\\")\\n```","params":[{"name":"operationName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":1263,"path":"src/init.lua"}},{"name":"updateLoggerName","desc":"Updates the logger\'s origin name.","params":[{"name":"newTitle","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","tags":["Chainable"],"since":"1.0.0","source":{"line":1276,"path":"src/init.lua"}},{"name":"updateKey","desc":"Updates the api key.","params":[{"name":"newApiKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1291,"path":"src/init.lua"}},{"name":"isPlayerBoostingDiscord","desc":"Checks if the user is currently a nitro booster.","params":[{"name":"User","desc":"","lua_type":"number | string | Player"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"1.0.0","yields":true,"source":{"line":1327,"path":"src/init.lua"}},{"name":"Destroy","desc":"Destroys the VibezAPI class.","params":[],"returns":[],"function_type":"method","since":"1.0.0","source":{"line":1375,"path":"src/init.lua"}},{"name":"toggleUI","desc":"Toggles the client promote/demote/fire UI.","params":[{"name":"override","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","since":"1.0.0","source":{"line":1389,"path":"src/init.lua"}},{"name":"getWebhookBuilder","desc":"Initializes the Hooks class with the specified webhook.","params":[{"name":"webhook","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"VibezHooks"}],"function_type":"method","since":"1.0.0","source":{"line":1417,"path":"src/init.lua"}},{"name":"getActivity","desc":"Gets either a full list of blacklists or checks if a player is currently blacklisted.","params":[{"name":"userId","desc":"","lua_type":"(string | number)?"}],"returns":[{"desc":"","lua_type":"blacklistResponse"}],"function_type":"method","since":"1.1.0","source":{"line":1431,"path":"src/init.lua"}},{"name":"getActivity","desc":"Gets either a full list of blacklists or checks if a player is currently blacklisted.","params":[{"name":"userId","desc":"","lua_type":"(string | number)?"}],"returns":[{"desc":"","lua_type":"blacklistResponse"}],"function_type":"method","since":"1.1.0","source":{"line":1457,"path":"src/init.lua"}},{"name":"getActivity","desc":"Gets a player\'s or everyone\'s current activity","params":[{"name":"userId","desc":"","lua_type":"(string | number)?"}],"returns":[{"desc":"","lua_type":"activityResponse"}],"function_type":"method","since":"1.0.0","source":{"line":1510,"path":"src/init.lua"}},{"name":"saveActivity","desc":"Saves the player\'s current activity","params":[{"name":"userId","desc":"","lua_type":"string | number"},{"name":"secondsSpent","desc":"","lua_type":"number"},{"name":"messagesSent","desc":"","lua_type":"(number | { string })?"}],"returns":[{"desc":"","lua_type":"httpResponse"}],"function_type":"method","since":"1.0.0","source":{"line":1531,"path":"src/init.lua"}},{"name":"new","desc":":::caution Notice\\nThis method can be used as a normal function or invoke the \\".new\\" function:    \\n`require(14946453963)(\\"API Key\\")`  \\n`require(14946453963).new(\\"API Key\\")`\\n:::\\n\\nConstructs the main Vibez API class.\\n\\n```lua\\nlocal myKey = \\"YOUR_API_KEY_HERE\\"\\nlocal VibezAPI = require(14946453963)\\nlocal Vibez = VibezAPI(myKey)\\n```","params":[{"name":"apiKey","desc":"Your Vibez API key.","lua_type":"string"},{"name":"extraOptions","desc":"Extra settings to configure the api to work for you.","lua_type":"extraOptionsType"}],"returns":[{"desc":"","lua_type":"VibezAPI"}],"function_type":"static","tags":["Constructor"],"source":{"line":1594,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"extraOptionsType","desc":"","fields":[{"name":"isChatCommandsEnabled","lua_type":"boolean","desc":"Automatically load commands for users."},{"name":"isUIEnabled","lua_type":"boolean","desc":"Allow for player\'s to click on another for ranking options."},{"name":"commandPrefix","lua_type":"string","desc":"Change the prefix of commands."},{"name":"minRankToUseCommandsAndUI","lua_type":"number","desc":"Minimum rank to use commands. (Default: 255)"},{"name":"maxRankToUseCommandsAndUI","lua_type":"number","desc":"Maximum rank to use commands. (Default: 255)"},{"name":"overrideGroupCheckForStudio","lua_type":"boolean","desc":"When in studio, it\'ll force any rank checks to be the \'maxRankForCommands\' value."},{"name":"nameOfGameForLogging","lua_type":"string","desc":"Name of logger\'s \'Origin\' embed field."},{"name":"ignoreWarnings","lua_type":"boolean","desc":"Ignores any VibezAPI warnings (Excluding Webhooks & Activity Tracking)"},{"name":"activityTrackingEnabled","lua_type":"boolean","desc":"Track a user\'s activity if their rank is higher than \'rankToStartTrackingActivityFor\'."},{"name":"rankToStartTrackingActivityFor","lua_type":"boolean","desc":"Minimum rank required to start tracking activity. (Default: 255)"},{"name":"disableActivityTrackingWhenAFK","lua_type":"boolean","desc":"Subtracts time of users who are detected as \'AFK\'."},{"name":"delayBeforeMarkedAFK","lua_type":"number","desc":"The amount of time in seconds before a player is marked \'AFK\'. (Default: 30)"},{"name":"disableActivityTrackingInStudio","lua_type":"boolean","desc":"Stops saving any activity tracked when play testing in studio."},{"name":"usePromises","lua_type":"boolean","desc":"Determines whether the module should return promises or not."}],"source":{"line":41,"path":"src/init.lua"}},{"name":"groupIdResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"groupId","lua_type":"number?","desc":""}],"private":true,"source":{"line":49,"path":"src/init.lua"}},{"name":"errorResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"errorMessage","lua_type":"string","desc":""}],"private":true,"source":{"line":57,"path":"src/init.lua"}},{"name":"rankResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"message","lua_type":"string","desc":""},{"name":"data","lua_type":"{ newRank: { id: number, name: string, rank: number, memberCount: number }, oldRank: { id: number, name: string, rank: number, groupInformation: { id: number, name: string, memberCount: number, hasVerifiedBadge: boolean } } }","desc":""}],"private":true,"source":{"line":66,"path":"src/init.lua"}},{"name":"userBlacklistResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"data","lua_type":"{ blacklisted: boolean, reason: string }","desc":""}],"private":true,"source":{"line":74,"path":"src/init.lua"}},{"name":"fullBlacklists","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"blacklists:","lua_type":"{ [number | string]: { reason: string, blacklistedBy: number } }","desc":""}],"private":true,"source":{"line":82,"path":"src/init.lua"}},{"name":"vibezCommandFunctions","desc":"","fields":[{"name":"getGroupRankFromName","lua_type":"(self: VibezAPI, groupRoleName: string) -> number?","desc":""},{"name":"getGroupFromUser","lua_type":"(self: VibezAPI, groupId: number, userId: number) -> { any }?","desc":""},{"name":"Http","lua_type":"(self: VibezAPI, Route: string, Method: string?, Headers: { [string]: any }, Body: { any }) -> httpResponse","desc":""}],"private":true,"source":{"line":91,"path":"src/init.lua"}},{"name":"infoResponse","desc":"","fields":[{"name":"success","lua_type":"boolean","desc":""},{"name":"message","lua_type":"string","desc":""}],"private":true,"source":{"line":99,"path":"src/init.lua"}},{"name":"activityResponse","desc":"","fields":[{"name":"secondsUserHasSpent","lua_type":"number","desc":""},{"name":"messagesUserHasSent","lua_type":"number","desc":""},{"name":"detailsLogs","lua_type":"[ {timestampLeftAt: number, secondsUserHasSpent: number, messagesUserHasSent: number}? ]","desc":""}],"private":true,"source":{"line":108,"path":"src/init.lua"}},{"name":"responseBody","desc":"","lua_type":"groupIdResponse | errorResponse | rankResponse","private":true,"source":{"line":114,"path":"src/init.lua"}},{"name":"httpResponse","desc":"","fields":[{"name":"Body","lua_type":"responseBody","desc":""},{"name":"Headers","lua_type":"{ [string]: any }","desc":""},{"name":"StatusCode","lua_type":"number","desc":""},{"name":"StatusMessage","lua_type":"string?","desc":""},{"name":"Success","lua_type":"boolean","desc":""},{"name":"rawBody","lua_type":"string","desc":""}],"private":true,"source":{"line":126,"path":"src/init.lua"}}],"name":"VibezAPI","desc":"**IMPORTANT**: When using this module, we recommend using the number-based format rather than importing the scripts into the game.\\n\\t","source":{"line":1604,"path":"src/init.lua"}}')}}]);